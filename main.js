/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin-
*/

var A=Object.defineProperty;var I=Object.getOwnPropertyDescriptor;var $=Object.getOwnPropertyNames;var R=Object.prototype.hasOwnProperty;var U=(b,s)=>{for(var t in s)A(b,t,{get:s[t],enumerable:!0})},O=(b,s,t,e)=>{if(s&&typeof s=="object"||typeof s=="function")for(let a of $(s))!R.call(b,a)&&a!==t&&A(b,a,{get:()=>s[a],enumerable:!(e=I(s,a))||e.enumerable});return b};var N=b=>O(A({},"__esModule",{value:!0}),b);var j={};U(j,{default:()=>D});module.exports=N(j);var v=require("obsidian");var x={preset:"grid",imageProperty:"cover",imageHeight:"200px",imageFit:"cover",properties:"all",exclude:[],scrollableProperties:!1,contentHeight:"200px",showLabels:!0,cardSpacing:16,enableShadows:!0,propertiesAlign:"left",titleAlign:"left",fontSize:"default",enableClickableCards:!1,defaultDateFormat:"YYYY-MM-DD",propertyFormatters:{},mobileColumns:1,mobilePreset:"grid",mobileImageHeight:"150px",mobileScrollableProperties:!0,mobileContentHeight:"150px",forceMobileMode:!1,enableLazyLoading:!1,enableDynamicUpdates:!1,debugMode:!1};var m=require("obsidian"),E=class extends m.PluginSettingTab{constructor(s,t){super(s,t),this.plugin=t}display(){let{containerEl:s}=this;s.empty(),s.createEl("h2",{text:"DataCards Settings"}),s.createEl("h3",{text:"Preset Settings"}),new m.Setting(s).setName("Default Preset").setDesc("Choose the default preset for cards").addDropdown(e=>e.addOption("grid","Grid (balanced, 3 columns)").addOption("portrait","Portrait (optimized for book covers, 3 columns)").addOption("square","Square (1:1 cards with minimal text, 4 columns)").addOption("compact","Compact (side-by-side layout, 4 columns)").addOption("dense","Dense (maximum density, 6 columns)").setValue(this.plugin.settings.preset).onChange(async a=>{this.plugin.settings.preset=a,await this.plugin.saveSettings()})),s.createEl("h3",{text:"Image Settings"}),new m.Setting(s).setName("Default Image Property").setDesc("The frontmatter property to use for images").addText(e=>e.setPlaceholder("cover").setValue(this.plugin.settings.imageProperty).onChange(async a=>{this.plugin.settings.imageProperty=a,await this.plugin.saveSettings()})),s.createEl("h3",{text:"Display Settings"}),new m.Setting(s).setName("Show Property Labels").setDesc("Show labels for properties").addToggle(e=>e.setValue(this.plugin.settings.showLabels).onChange(async a=>{this.plugin.settings.showLabels=a,await this.plugin.saveSettings()})),new m.Setting(s).setName("Card Spacing").setDesc("Space between cards (in pixels)").addSlider(e=>e.setLimits(0,32,4).setValue(this.plugin.settings.cardSpacing).setDynamicTooltip().onChange(async a=>{this.plugin.settings.cardSpacing=a,await this.plugin.saveSettings()})),new m.Setting(s).setName("Enable Card Shadows").setDesc("Add subtle shadows to cards for a more three-dimensional appearance").addToggle(e=>e.setValue(this.plugin.settings.enableShadows).onChange(async a=>{this.plugin.settings.enableShadows=a,await this.plugin.saveSettings()})),new m.Setting(s).setName("Properties Alignment").setDesc("Text alignment for properties and their labels").addDropdown(e=>e.addOption("left","Left").addOption("center","Center").addOption("right","Right").setValue(this.plugin.settings.propertiesAlign).onChange(async a=>{this.plugin.settings.propertiesAlign=a,await this.plugin.saveSettings()})),new m.Setting(s).setName("Title Alignment").setDesc("Text alignment for the title (filename)").addDropdown(e=>e.addOption("left","Left").addOption("center","Center").addOption("right","Right").setValue(this.plugin.settings.titleAlign).onChange(async a=>{this.plugin.settings.titleAlign=a,await this.plugin.saveSettings()})),new m.Setting(s).setName("Font Size").setDesc("Text size for all card elements (properties, labels, and title)").addDropdown(e=>e.addOption("larger","Larger (120%)").addOption("large","Large (110%)").addOption("default","Default (100%)").addOption("small","Small (90% - similar to dense preset)").addOption("smaller","Smaller (80%)").setValue(this.plugin.settings.fontSize).onChange(async a=>{this.plugin.settings.fontSize=a,await this.plugin.saveSettings()})),s.createEl("h3",{text:"Card Content Settings"}),new m.Setting(s).setName("Scrollable Properties").setDesc("Enable scrolling for card properties when they exceed the content height (Note: Square and Compact presets are scrollable by default)").addToggle(e=>e.setValue(this.plugin.settings.scrollableProperties).onChange(async a=>{this.plugin.settings.scrollableProperties=a,await this.plugin.saveSettings()})),s.createEl("h3",{text:"Card Interaction Settings"}),new m.Setting(s).setName("Enable Clickable Cards").setDesc("Make the entire card clickable to open the note (not just the title)").addToggle(e=>e.setValue(this.plugin.settings.enableClickableCards).onChange(async a=>{this.plugin.settings.enableClickableCards=a,await this.plugin.saveSettings()})),new m.Setting(s).setName("Content Height").setDesc("Height of the scrollable content area (e.g., 200px)").addText(e=>e.setPlaceholder("200px").setValue(this.plugin.settings.contentHeight).onChange(async a=>{this.plugin.settings.contentHeight=a||"200px",await this.plugin.saveSettings()})),s.createEl("h3",{text:"Formatting Settings"}),new m.Setting(s).setName("Default Date Format").setDesc("Format for displaying dates (YYYY = year, MM = month, DD = day)").addText(e=>e.setPlaceholder("YYYY-MM-DD").setValue(this.plugin.settings.defaultDateFormat).onChange(async a=>{this.plugin.settings.defaultDateFormat=a||"YYYY-MM-DD",await this.plugin.saveSettings()})),s.createEl("h3",{text:"Mobile Settings"}),new m.Setting(s).setName("Mobile Preset").setDesc("Preset to use on mobile devices").addDropdown(e=>e.addOption("grid","Grid (balanced)").addOption("portrait","Portrait (optimized for book covers)").addOption("square","Square (1:1 cards with minimal text)").addOption("compact","Compact (side-by-side layout)").addOption("dense","Dense (maximum density)").setValue(this.plugin.settings.mobilePreset).onChange(async a=>{this.plugin.settings.mobilePreset=a,await this.plugin.saveSettings()})),new m.Setting(s).setName("Mobile Columns").setDesc("Number of columns to use on mobile devices (default: 1)").addSlider(e=>e.setLimits(1,3,1).setValue(this.plugin.settings.mobileColumns).setDynamicTooltip().onChange(async a=>{this.plugin.settings.mobileColumns=a,await this.plugin.saveSettings()})),new m.Setting(s).setName("Mobile Scrollable Properties").setDesc("Enable scrolling for card properties on mobile devices").addToggle(e=>e.setValue(this.plugin.settings.mobileScrollableProperties).onChange(async a=>{this.plugin.settings.mobileScrollableProperties=a,await this.plugin.saveSettings()})),new m.Setting(s).setName("Mobile Content Height").setDesc("Height of the scrollable content area on mobile devices").addText(e=>e.setPlaceholder("150px").setValue(this.plugin.settings.mobileContentHeight).onChange(async a=>{this.plugin.settings.mobileContentHeight=a||"150px",await this.plugin.saveSettings()})),new m.Setting(s).setName("Force Mobile Mode").setDesc("Force the plugin to use mobile settings even on desktop (for testing)").addToggle(e=>e.setValue(this.plugin.settings.forceMobileMode).onChange(async a=>{this.plugin.settings.forceMobileMode=a,await this.plugin.saveSettings()})),s.createEl("h3",{text:"Performance Settings"}),new m.Setting(s).setName("Enable Lazy Loading").setDesc("Only load images when they become visible (improves performance with many cards)").addToggle(e=>e.setValue(this.plugin.settings.enableLazyLoading).onChange(async a=>{this.plugin.settings.enableLazyLoading=a,await this.plugin.saveSettings()})),s.createEl("h3",{text:"Update Settings"}),new m.Setting(s).setName("Enable Dynamic Updates").setDesc("Automatically update DataCards when properties change (may impact performance)").addToggle(e=>e.setValue(this.plugin.settings.enableDynamicUpdates).onChange(async a=>{this.plugin.settings.enableDynamicUpdates=a,await this.plugin.saveSettings()})),new m.Setting(s).setName("Per-Card Dynamic Updates").setDesc('Individual cards can override the global setting with "dynamicUpdate: true/false" in their settings').setDisabled(!0),s.createEl("h3",{text:"Developer Settings"}),new m.Setting(s).setName("Debug Mode").setDesc("Enable debug logging (only use during development or troubleshooting)").addToggle(e=>e.setValue(this.plugin.settings.debugMode).onChange(async a=>{this.plugin.settings.debugMode=a,await this.plugin.saveSettings()})),s.createEl("h3",{text:"Help"});let t=s.createEl("div");t.innerHTML=`
      <p><strong>Basic Usage:</strong><br>
      Use the <code>datacards</code> code block to create card layouts from Dataview queries.</p>
      
      <p><strong>Example:</strong></p>
      <pre><code>
\`\`\`datacards
TABLE title, author, rating, cover FROM #books
SORT rating DESC

// Settings
preset: grid
imageFit: contain
defaultDateFormat: YYYY
\`\`\`
      </code></pre>
      
      <p><strong>Important:</strong> You must explicitly include all properties you want to display in your Dataview query (including the image property).</p>
      
      <p><strong>Image Support:</strong><br>
      The plugin supports external URLs, vault images, and wiki links:<br>
      <code>cover: https://example.com/image.jpg</code> or <code>cover: [[path/to/image.jpg]]</code></p>     
    
      <p><strong>Tip:</strong> Data Cards works best with the Editor-Setting "Readable line length" disabled. </p><br>
      
      <p><a href="https://github.com/Sophokles187/data-cards" target="_blank" rel="noopener">View complete documentation and examples on GitHub</a></p>
    `}};var r=class{static setDebugMode(s){this.debugMode=s}static error(s,...t){console.error(`[DataCards] ${s}`,...t)}static warn(s,...t){console.warn(`[DataCards] ${s}`,...t)}static debug(s,...t){this.debugMode&&console.log(`[DataCards] ${s}`,...t)}};r.debugMode=!1;var C=class{parseDataCardsBlock(s){r.debug("Parsing datacards block");let t=/\n-{3,}\n|\n\/\/\s*Settings.*|\n\/\*\s*Settings\s*\*\/.*/,e=s.match(t),a=/^\/\/\s*Settings.*/,o=s.match(a),i,n;e&&e.index!==void 0?(r.debug("Found settings separator at index:",e.index),i=s.substring(0,e.index).trim(),n=s.substring(e.index+e[0].length).trim()):o?(r.debug("Block starts with settings marker"),i="",n=s.substring(o[0].length).trim()):(r.debug("No settings separator found"),i=s.trim(),n=""),r.debug("Extracted query:",i),i=this.ensureQueryType(i);let c=this.parseSettings(n),d=this.extractColumnAliases(i);return d.length>0&&(c.columnAliases=d,r.debug("Extracted column aliases:",d)),{query:i,settings:c}}extractColumnAliases(s){let t=[];if(!s.trim().toUpperCase().startsWith("TABLE"))return t;try{let e=s.match(/TABLE\s+(without\s+id\s+)?([\s\S]*?)(?:\s+FROM|\s+WHERE|\s+SORT|\s+GROUP BY|\s+LIMIT|\s+FLATTEN|$)/i);if(!e||!e[2])return t;let a=e[2].trim();if(r.debug("Extracted columns text:",a),!a)return t;let o=this.splitColumnsPreservingExpressions(a);for(let i of o){let n=i.match(/^(.*?)\s+as\s+(?:"([^"]+)"|'([^']+)'|([^\s,]+))$/i);if(n){let c=n[1].trim(),d=n[2]||n[3]||n[4],l=c;if(/^[a-zA-Z0-9_.-]+$/.test(c))l=c;else{let g=c.match(/\(\s*".*?"\s*\+\s*([a-zA-Z0-9_.-]+)\s*\+\s*".*?"\s*\)/);g&&g[1]&&(l=g[1],r.debug(`Extracted field name from complex expression: ${l}`))}t.push({original:l,alias:d,expression:c}),r.debug(`Found column alias: ${l} as "${d}"`)}}}catch(e){r.error("Error extracting column aliases:",e)}return t}splitColumnsPreservingExpressions(s){let t=[],e="",a=0,o=!1,i=!1;for(let n=0;n<s.length;n++){let c=s[n];if(c==='"'&&!i?o=!o:c==="'"&&!o&&(i=!i),!o&&!i&&(c==="("?a++:c===")"&&a--),c===","&&a===0&&!o&&!i){t.push(e.trim()),e="";continue}e+=c}return e.trim()&&t.push(e.trim()),t}ensureQueryType(s){if(!/\b(TABLE|LIST|TASK|CALENDAR)\b/i.test(s)){let e=s.split(`
`),a=-1;for(let o=0;o<e.length;o++){let i=e[o].trim();if(i&&!i.startsWith("//")&&!i.startsWith("/*")){a=o;break}}if(a>=0){let o=this.parseSettings(e.slice(a+1).join(`
`)),i="",n=[];return o.imageProperty&&n.push(o.imageProperty),i="",r.debug("Using simple TABLE query without property list"),i.trim()===""?e[a]="TABLE "+e[a]:e[a]="TABLE"+i+" "+e[a],e.join(`
`)}else return"TABLE "+s}return s}parseSettings(s){if(!s)return{};let t={},e=s.split(`
`);r.debug("Parsing settings from text");for(let a of e){if(a.trim().startsWith("//")||a.trim().startsWith("/*")||!a.trim())continue;let o=a.match(/^\s*([a-zA-Z0-9_]+)\s*:\s*(.+)\s*$/);if(o){let[,i,n]=o;if(r.debug(`Found setting: ${i} = ${n}`),i==="properties"&&n.trim().startsWith("[")&&n.trim().endsWith("]")){r.debug("Detected properties array");let c=n.substring(1,n.length-1).trim();if(c){let d=c.split(",").map(l=>l.trim());t[i]=d}else t[i]=[]}else i==="defaultDateFormat"?t[i]=n.trim():i==="dynamicUpdate"?(t[i]=this.parseValue(n.trim()),r.debug(`Parsed dynamicUpdate setting: ${t[i]}`)):t[i]=this.parseValue(n.trim())}}return t}parseValue(s){r.debug("Parsing value:",s);try{return JSON.parse(s)}catch(t){}if(s.startsWith("[")&&s.endsWith("]")){r.debug("Detected array syntax");let t=s.substring(1,s.length-1).trim();return t?t.split(",").map(a=>a.trim()):[]}return/^-?\d+(\.\d+)?$/.test(s)?Number(s):s.toLowerCase()==="true"?!0:s.toLowerCase()==="false"?!1:s}};var F=require("obsidian");var S=class{constructor(s,t){this.currentSettings=null;this.app=s,this.pluginSettings=t}updateSettings(s){this.pluginSettings=s}isMobileDevice(){return F.Platform.isMobile||this.pluginSettings.forceMobileMode}renderCards(s,t,e){r.debug("SPECIAL CHECK - renderCards called with results:",t);let a=!1;if(t&&t.values&&Array.isArray(t.values)&&t.values.length===0?(r.debug("Empty table detected in renderCards"),a=!0):Array.isArray(t)&&t.length===0?(r.debug("Empty array detected in renderCards"),a=!0):t&&typeof t=="object"&&!Array.isArray(t)&&Object.keys(t).length===2&&(r.debug("Object with exactly 2 keys detected in renderCards:",Object.keys(t)),a=!0),a){r.debug("Rendering empty state from renderCards"),this.renderEmptyState(s,"No notes found");return}let o=this.isMobileDevice();r.debug("Is mobile device:",o);let i={...this.pluginSettings};r.debug("Initial settings from plugin:",{preset:i.preset,imageHeight:i.imageHeight,mobileColumns:i.mobileColumns,mobilePreset:i.mobilePreset,mobileImageHeight:i.mobileImageHeight}),i={...i,...e},r.debug("After applying block settings:",{preset:i.preset,imageHeight:i.imageHeight,mobileColumns:i.mobileColumns,mobilePreset:i.mobilePreset,mobileImageHeight:i.mobileImageHeight}),o&&(r.debug("Applying mobile settings..."),r.debug(`Using mobile columns: ${i.mobileColumns}`),i.mobilePreset!==void 0&&(r.debug(`Overriding preset: ${i.preset} with mobilePreset: ${i.mobilePreset}`),i.preset=i.mobilePreset),i.mobileImageHeight!==void 0&&(r.debug(`Overriding imageHeight: ${i.imageHeight} with mobileImageHeight: ${i.mobileImageHeight}`),i.imageHeight=i.mobileImageHeight),r.debug("Final settings after applying mobile settings:",{preset:i.preset,imageHeight:i.imageHeight})),this.currentSettings=i;let n=s.createEl("div",{cls:"datacards-container"});n.addClass(`datacards-preset-${i.preset}`),i.enableShadows||n.addClass("datacards-no-shadows"),i.fontSize&&i.fontSize!=="default"?(n.addClass(`datacards-font-${i.fontSize}`),r.debug(`Applied font size class: datacards-font-${i.fontSize}`)):i.preset==="dense"&&(!i.fontSize||i.fontSize==="default")&&(n.addClass("datacards-font-small"),r.debug("Applied small font size for dense preset")),n.style.setProperty("--card-gap",`${i.cardSpacing}px`);let c;if(o)c=i.mobileColumns;else{let l=3;i.preset==="dense"?l=6:i.preset==="compact"||i.preset==="square"?l=4:i.preset==="portrait"&&(l=3),c=e.columns!==void 0?e.columns:l}r.debug(`Using ${c} columns`),n.style.setProperty("--card-columns",c.toString(),"important");let d;if(e.imageHeight!==void 0?d=i.imageHeight:i.preset==="portrait"?d="350px":i.preset==="square"||i.preset==="compact"?d="200px":i.preset==="dense"?d="120px":d="200px",(typeof d=="number"||/^\d+$/.test(d))&&(d=`${d}px`),n.style.setProperty("--image-height",d),e.imageFit!==void 0)n.style.setProperty("--image-fit",i.imageFit);else{let l=i.preset==="portrait"?"contain":"cover";n.style.setProperty("--image-fit",l)}t&&t.values&&Array.isArray(t.values)?(r.debug("Detected table-like results with values array"),this.renderTableResults(n,t,i)):t&&Array.isArray(t)?(r.debug("Detected array results"),this.renderArrayResults(n,t,i)):t&&typeof t=="object"?(r.debug("Detected object results"),this.renderObjectResults(n,t,i)):(r.debug("No valid results detected"),this.renderError(n,"No results or unsupported result type"))}renderError(s,t){let e=s.createEl("div",{cls:"datacards-error",text:t})}renderEmptyState(s,t="No notes found"){r.debug("renderEmptyState called with message:",t);let e=s.createEl("div",{cls:"datacards-container"});r.debug("Created cards container for empty state");let a=e.createEl("div",{cls:"datacards-empty-state",text:t});r.debug("Added empty state element with class:","datacards-empty-state")}renderTableResults(s,t,e){let{values:a,headers:o}=t;r.debug("Rendering table results:"),r.debug("- Headers:",o),r.debug("- Number of rows:",a.length),a.forEach((i,n)=>{r.debug(`Processing row ${n}`);let c=this.createCardElement(s);if(e.imageProperty&&o.includes(e.imageProperty)){let p=o.indexOf(e.imageProperty),f=i[p];r.debug(`Image property '${e.imageProperty}' value:`,f),f&&this.addImageToCard(c,f)}else e.imageProperty&&r.debug(`Image property '${e.imageProperty}' not found in headers:`,o);let d=c.createEl("div",{cls:"datacards-content"});if(o.includes("File")||o.includes("file")){let p=o.findIndex(f=>f.toLowerCase()==="file");if(p>=0){let f=i[p];r.debug("File property value:",f);let y=d.createEl("div",{cls:"datacards-property datacards-file-property-container"});this.formatFileProperty(y,f),e.enableClickableCards&&this.makeCardClickable(c,f)}}let l=d.createEl("div",{cls:"datacards-properties-container"});if(this.shouldUseScrollableProperties(e)){l.addClass("datacards-scrollable-properties");let p=this.getContentHeight(e);l.style.setProperty("--content-height",p)}let u=[];e.properties==="all"?(u=[...o],r.debug("Using all headers as properties:",u)):Array.isArray(e.properties)?(u=[...e.properties],r.debug("Using specified properties:",u)):r.debug("No properties specified, using empty array");let h=u.filter(p=>!e.exclude.includes(p)&&p!==e.imageProperty&&p.toLowerCase()!=="file");r.debug("Filtered properties (after excluding file):",h),h.forEach(p=>{if(r.debug(`Checking property '${p}' in headers:`,o.includes(p)),o.includes(p)){let f=o.indexOf(p),y=i[f];if(r.debug(`Property '${p}' value:`,y),r.debug(`Property '${p}' type:`,typeof y),typeof y=="string"&&y.includes("[[")&&y.includes("]]")){r.debug(`Found wiki link in property '${p}':`,y);let P=l.createEl("div",{cls:"datacards-property"});e.showLabels&&P.createEl("div",{cls:"datacards-property-label",text:p});let M=P.createEl("div",{cls:"datacards-property-value"}),T=y.match(/\[\[([^\]|]+)(?:\|([^\]]+))?\]\]/);if(T){let w=T[1],L=T[2]||this.getCleanFilename(w);r.debug(`Creating direct link for wiki link: path="${w}", display="${L}"`);let H=M.createEl("a",{cls:"internal-link",text:L,attr:{href:w,"data-href":w,"data-type":"link"}});try{this.app.workspace.trigger("hover-link",{event:new MouseEvent("mouseover"),source:"preview",hoverEl:H,targetEl:H,linktext:w})}catch(q){}}else M.setText(y)}else this.addPropertyToCard(l,p,y,e)}else r.debug(`Property '${p}' not found in headers`)}),h.length===0&&!o.some(p=>p.toLowerCase()==="file")&&(r.debug("No properties were added to the card"),d.createEl("div",{cls:"datacards-property",text:"No properties to display"}))})}renderArrayResults(s,t,e){t.forEach(a=>{let o=this.createCardElement(s);e.imageProperty&&a[e.imageProperty]&&this.addImageToCard(o,a[e.imageProperty]);let i=o.createEl("div",{cls:"datacards-content"});if("file"in a){let u=i.createEl("div",{cls:"datacards-property datacards-file-property-container"});this.formatFileProperty(u,a.file),e.enableClickableCards&&this.makeCardClickable(o,a.file)}let n=i.createEl("div",{cls:"datacards-properties-container"});if(this.shouldUseScrollableProperties(e)){n.addClass("datacards-scrollable-properties");let u=this.getContentHeight(e);n.style.setProperty("--content-height",u)}let d=Object.keys(a);(e.properties==="all"?d:Array.isArray(e.properties)?e.properties:[]).filter(u=>!e.exclude.includes(u)&&u!==e.imageProperty&&u.toLowerCase()!=="file").forEach(u=>{u in a&&this.addPropertyToCard(n,u,a[u],e)})})}renderObjectResults(s,t,e){let a=this.createCardElement(s);e.imageProperty&&t[e.imageProperty]&&this.addImageToCard(a,t[e.imageProperty]);let o=a.createEl("div",{cls:"datacards-content"});if("file"in t){let g=o.createEl("div",{cls:"datacards-property datacards-file-property-container"});this.formatFileProperty(g,t.file),e.enableClickableCards&&this.makeCardClickable(a,t.file)}let i=o.createEl("div",{cls:"datacards-properties-container"});if(this.shouldUseScrollableProperties(e)){i.addClass("datacards-scrollable-properties");let g=this.getContentHeight(e);i.style.setProperty("--content-height",g)}let c=Object.keys(t);(e.properties==="all"?c:Array.isArray(e.properties)?e.properties:[]).filter(g=>!e.exclude.includes(g)&&g!==e.imageProperty&&g.toLowerCase()!=="file").forEach(g=>{g in t&&this.addPropertyToCard(i,g,t[g],e)})}createCardElement(s){var e;let t=s.createEl("div",{cls:"datacards-card"});return(e=this.currentSettings)!=null&&e.enableClickableCards&&t.addClass("datacards-clickable-card"),t}makeCardClickable(s,t){if(!t)return;let e;if(typeof t=="object"&&t!==null?"path"in t?e=t.path:"link"in t?e=t.link:e=String(t):e=String(t),e.includes("[[")&&e.includes("]]")){let a=e.match(/\[\[([^\]|]+)(?:\|([^\]]+))?\]\]/);a?e=a[1]:e=e.substring(2,e.length-2).split("|")[0]}s.addClass("datacards-clickable-card"),s.addEventListener("click",a=>{a.target.closest(".internal-link")||(this.app.workspace.openLinkText(e,"",!1,{active:!0}),a.stopPropagation())})}addImageToCard(s,t){var i;let e=s.createEl("div",{cls:"datacards-image-container"}),a;typeof t=="object"&&t!==null?(r.debug("Image value is an object:",t),"path"in t?(a=t.path,r.debug("Extracted path from Link object:",a)):(a=String(t),r.debug("Converted object to string:",a))):(a=String(t),r.debug("Image value is a string:",a)),a=this.extractImageSource(a),r.debug("After image source extraction:",a);let o=e.createEl("div",{cls:"datacards-image-placeholder",text:"Loading image..."});(i=this.currentSettings)!=null&&i.enableLazyLoading?this.lazyLoadImage(e,o,a):this.loadImage(e,o,a)}extractImageSource(s){if(!s||typeof s!="string")return String(s||"");let t=s.match(/!\[(.*?)\]\((.*?)\)/);if(t){let o=t[2];return r.debug("Extracted URL from markdown image syntax:",o),o.replace(/['",.;:]+$/,"")}let e=s.match(/\[\[(.*?)\]\]/);if(e){let o=`[[${e[1]}]]`;return r.debug("Extracted wiki link:",o),o}let a=s.match(/(https?:\/\/[^\s"'<>[\]{}]+)/);if(a){let o=a[1];return r.debug("Extracted URL:",o),o.replace(/['",.;:]+$/,"")}return s}lazyLoadImage(s,t,e){r.debug("Lazy loading image:",e),new IntersectionObserver((o,i)=>{o.forEach(n=>{n.isIntersecting&&(r.debug("Image container is now visible, loading image:",e),this.loadImage(s,t,e),i.disconnect())})},{rootMargin:"100px",threshold:.1}).observe(s)}loadImage(s,t,e){let a=e.match(/!\[(.*?)\]\((.*?)\)/);if(a){let o=a[2];r.debug("Extracted URL from markdown image syntax:",o),this.loadImage(s,t,o);return}if(e.startsWith("http")||e.startsWith("https")){r.debug("Handling as external URL:",e);let o=e.replace(/['",.;:]+$/,"");r.debug("Cleaned URL:",o),this.loadExternalImage(s,t,o)}else if(e.startsWith("[[")&&e.endsWith("]]")){r.debug("Handling as wiki link");let o=e.substring(2,e.length-2),i=o;o.includes("|")&&(i=o.split("|")[0]);try{let n=this.app.vault.getAbstractFileByPath(i);if(n&&"stat"in n){r.debug("Found file in vault:",n);let c=n,d=this.app.vault.getResourcePath(c);r.debug("Resource path:",d);let l=s.createEl("img",{cls:"datacards-image",attr:{src:d}});l.onload=()=>{t.remove(),l.addClass("loaded")},l.onerror=()=>{t.setText("Image not found")}}else r.debug("File not found in vault or not a file:",i),t.setText("Image not found")}catch(n){r.warn("Error loading image:",n),t.setText("Error loading image")}}else{r.debug("Handling as local path");try{let o=this.app.vault.getAbstractFileByPath(e);if(o&&"stat"in o){r.debug("Found file in vault:",o);let i=o,n=this.app.vault.getResourcePath(i);r.debug("Resource path:",n);let c=s.createEl("img",{cls:"datacards-image",attr:{src:n}});c.onload=()=>{t.remove(),c.addClass("loaded")},c.onerror=()=>{t.setText("Image not found")}}else r.debug("File not found in vault:",e),t.setText("Image not found")}catch(o){r.warn("Error loading image:",o),t.setText("Error loading image")}}}loadExternalImage(s,t,e){r.debug("Loading external image with URL:",e);let a=s.createEl("img",{cls:"datacards-image",attr:{src:e,crossorigin:"anonymous"}});a.onload=()=>{r.debug("External image loaded successfully:",e),t.remove(),a.addClass("loaded")},a.onerror=o=>{r.warn("Failed to load external image with crossorigin attribute:",e),r.debug("Trying again without crossorigin attribute"),a.removeAttribute("crossorigin"),a.onload=()=>{r.debug("External image loaded successfully without crossorigin:",e),t.remove(),a.addClass("loaded")},a.onerror=i=>{r.warn("Failed to load external image without crossorigin:",e);let n=`https://images.weserv.nl/?url=${encodeURIComponent(e)}`;r.debug("Trying with image proxy service:",n),a.src=n,a.onload=()=>{r.debug("External image loaded successfully via proxy:",n),t.remove(),a.addClass("loaded")},a.onerror=c=>{r.warn("All attempts to load image failed:",e),t.setText("Image not found - URL: "+e);try{let d=document.createElement("img");d.style.display="none",d.src=e,document.body.appendChild(d),setTimeout(()=>{document.body.contains(d)&&document.body.removeChild(d)},3e3)}catch(d){r.debug("Error during final test:",d)}}}}}addPropertyToCard(s,t,e,a){r.debug(`Adding property to card: ${t} = ${e}`),r.debug(`Property type: ${typeof e}`);let o=s.createEl("div",{cls:"datacards-property"});a.propertiesAlign&&o.addClass(`datacards-text-${a.propertiesAlign}`);let i=t;if(a.columnAliases){let n=a.columnAliases.find(c=>c.original===t);n&&(i=n.alias,r.debug(`Using alias "${i}" for property "${t}"`))}if(a.showLabels){let n=o.createEl("div",{cls:"datacards-property-label",text:i});a.propertiesAlign&&n.addClass(`datacards-text-${a.propertiesAlign}`)}if(t.toLowerCase()==="file")this.formatFileProperty(o,e);else{let n=a.propertyFormatters[t];n?this.formatPropertyWithCustomFormatter(o,e,n):this.formatPropertyByType(o,e)}}formatPropertyWithCustomFormatter(s,t,e){let a=s.createEl("div",{cls:"datacards-property-value"});switch(e.type){case"stars":this.formatAsStars(a,t,e.options);break;case"badge":this.formatAsBadge(a,t,e.options);break;case"progress":this.formatAsProgress(a,t,e.options);break;case"date":this.formatAsDate(a,t,e.options);break;case"tags":this.formatAsTags(a,t,e.options);break;default:a.setText(String(t))}}formatPropertyByType(s,t){r.debug("formatPropertyByType called with value:",t),r.debug("Value type:",typeof t),typeof t=="string"&&(r.debug("String value length:",t.length),r.debug("String value exact content:",JSON.stringify(t)));let e=s.createEl("div",{cls:"datacards-property-value"});if(s.hasClass("datacards-text-left")?e.addClass("datacards-text-left"):s.hasClass("datacards-text-center")?e.addClass("datacards-text-center"):s.hasClass("datacards-text-right")&&e.addClass("datacards-text-right"),t==null)e.setText("");else if(Array.isArray(t))e.setText(t.join(", "));else if(typeof t=="boolean"){let a=e.createEl("input",{attr:{type:"checkbox",checked:t?"checked":"",disabled:"disabled"}})}else if(typeof t=="number")e.setText(t.toString());else if(t instanceof Date)this.formatAsDate(e,t);else if(typeof t=="string"){if(/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{3}[+-]\d{2}:\d{2}$/.test(t)||/^\d{4}-\d{2}-\d{2}$/.test(t)){let n=new Date(t);if(!isNaN(n.getTime())){this.formatAsDate(e,n);return}}let o=this.extractImageSource(t);if(o!==t){this.formatPropertyByType(s,o);return}if(typeof t=="string"&&t.includes("[[")&&t.includes("|")&&t.includes("]]")){let n=t.match(/\[\[.*\|(.*?)\]\]/);if(n&&n[1]){e.setText(n[1]);return}}if(t.includes("[[")&&t.includes("]]")){r.debug("Found wiki link in property value:",t),r.debug("Found wiki link in property value:",t);let n=/\[\[([^\]|]+)(?:\|([^\]]+))?\]\]/,c=t.match(n);if(c){r.debug("Wiki link match:",c);let d=c[1],l=c[2]||this.getCleanFilename(d);r.debug(`Wiki link path: "${d}", display text: "${l}"`),r.debug("Creating link element for wiki link");let g=e.createEl("a",{cls:"internal-link datacards-file-link",text:l,attr:{href:d,"data-href":d,"data-type":"link"}});r.debug("Link element created:",g);try{this.app.workspace.trigger("hover-link",{event:new MouseEvent("mouseover"),source:"preview",hoverEl:g,targetEl:g,linktext:d})}catch(u){}return}}let i=t.match(/!\[(.*?)\]\((.*?)\)/);if(i){r.debug("Found markdown image in property value");let n=i[2],c=i[1];e.addClass("loading");let d=e.createEl("img",{cls:"datacards-property-image loading",attr:{src:n,alt:c||"Image",crossorigin:"anonymous"}});d.onload=()=>{r.debug("Property image loaded successfully:",n),d.removeClass("loading")},d.onerror=()=>{r.warn("Failed to load property image:",n),d.remove(),e.removeClass("loading"),e.addClass("image-error"),e.setText("Image not found: "+n)};return}if(t.startsWith("[[")&&t.endsWith("]]")){r.debug("Processing wiki link that starts and ends with [[]]:",t);let n=/\[\[([^\]|]+)(?:\|([^\]]+))?\]\]/,c=t.match(n);if(c){let d=c[1],l=c[2]||this.getCleanFilename(d);r.debug(`Wiki link path: "${d}", display text: "${l}"`),r.debug("Creating link element for wiki link (direct match)");let g=e.createEl("a",{cls:"internal-link datacards-file-link",text:l,attr:{href:d,"data-href":d,"data-type":"link"}});r.debug("Link element created (direct match):",g);try{this.app.workspace.trigger("hover-link",{event:new MouseEvent("mouseover"),source:"preview",hoverEl:g,targetEl:g,linktext:d})}catch(u){}}else{let d=t.substring(2,t.length-2),l=d,g=d;if(d.includes("|")){let h=d.split("|");g=h[0],l=h[1]}else l=this.getCleanFilename(g);r.debug(`Fallback wiki link path: "${g}", display text: "${l}"`);let u=e.createEl("a",{cls:"internal-link datacards-file-link",text:l,attr:{href:g,"data-href":g,"data-type":"link"}});try{this.app.workspace.trigger("hover-link",{event:new MouseEvent("mouseover"),source:"preview",hoverEl:u,targetEl:u,linktext:g})}catch(h){}}}else if(t.startsWith("#")){let n=e.createEl("a",{cls:"datacards-tag tag-link",text:t,attr:{href:t,"data-href":t,"data-type":"tag"}})}else/<[ubia]>|<\/[ubia]>|<span|<div|<p>|<\/p>|<br>|<hr>/.test(t)?(r.debug("Rendering HTML content:",t),e.innerHTML=t):e.setText(t)}else if(typeof t=="object"&&t!==null){if("path"in t&&"type"in t&&t.type==="file"){r.debug("Handling Dataview Link object:",t);let a=t.path,o=t.display||this.getCleanFilename(a);r.debug(`Creating link from Dataview Link object: path="${a}", display="${o}"`);let i=e.createEl("a",{cls:"internal-link",text:o,attr:{href:a,"data-href":a,"data-type":"link"}});try{this.app.workspace.trigger("hover-link",{event:new MouseEvent("mouseover"),source:"preview",hoverEl:i,targetEl:i,linktext:a})}catch(n){}return}if("ts"in t&&typeof t.ts=="number"){let a=new Date(t.ts);if(!isNaN(a.getTime())){this.formatAsDate(e,a);return}}e.setText(String(t))}else e.setText(String(t))}formatAsStars(s,t,e){let a=(e==null?void 0:e.max)||5,o="\u2605",i="\u2606",n=s.createEl("div",{cls:"datacards-stars"}),c=Math.min(Math.max(0,t),a);for(let d=0;d<c;d++)n.createEl("span",{cls:"datacards-star datacards-star-full",text:o});for(let d=c;d<a;d++)n.createEl("span",{cls:"datacards-star datacards-star-empty",text:i})}formatAsBadge(s,t,e){let a=s.createEl("span",{cls:"datacards-badge",text:t});e!=null&&e.color&&(a.style.backgroundColor=e.color)}formatAsProgress(s,t,e){let a=(e==null?void 0:e.max)||100,o=Math.min(Math.max(0,t),a)/a*100,i=s.createEl("div",{cls:"datacards-progress-container"}),n=i.createEl("div",{cls:"datacards-progress-bar"});n.style.width=`${o}%`,e!=null&&e.showText&&i.createEl("span",{cls:"datacards-progress-text",text:`${Math.round(o)}%`})}formatAsDate(s,t,e){let a=typeof t=="string"?new Date(t):t;if(isNaN(a.getTime())){s.setText(String(t));return}let o=(e==null?void 0:e.format)||(this.currentSettings?this.currentSettings.defaultDateFormat:x.defaultDateFormat),i=a.getFullYear(),n=(a.getMonth()+1).toString().padStart(2,"0"),c=a.getDate().toString().padStart(2,"0"),d=o.replace("YYYY",i.toString()).replace("MM",n).replace("DD",c);s.setText(d)}formatFileProperty(s,t){var o;let e=s.createEl("div",{cls:"datacards-property-value datacards-file-property"});if((o=this.currentSettings)!=null&&o.titleAlign?e.addClass(`datacards-text-${this.currentSettings.titleAlign}`):s.hasClass("datacards-text-left")?e.addClass("datacards-text-left"):s.hasClass("datacards-text-center")?e.addClass("datacards-text-center"):s.hasClass("datacards-text-right")&&e.addClass("datacards-text-right"),t==null){e.setText("");return}let a;if(typeof t=="object"&&t!==null?"path"in t?a=t.path:"link"in t?a=t.link:a=String(t):a=String(t),a=this.extractImageSource(a),r.debug("File property after image source extraction:",a),typeof t=="string"&&t.includes("[[")&&t.includes("|")&&t.includes("]]")){r.debug("Found wiki link with pipe character:",t);let i=t.match(/\[\[.*\|(.*?)\]\]/);if(i&&i[1]){r.debug("Extracted display text:",i[1]);let n=t.match(/\[\[(.*?)\|(.*?)\]\]/);if(n){let c=n[1],d=n[2];r.debug(`Creating link from pipe syntax - path: "${c}", display: "${d}"`);let l=e.createEl("a",{cls:"internal-link datacards-file-link",text:d,attr:{href:c,"data-href":c,"data-type":"link"}});r.debug("Created link element for pipe syntax:",l);try{this.app.workspace.trigger("hover-link",{event:new MouseEvent("mouseover"),source:"preview",hoverEl:l,targetEl:l,linktext:c})}catch(g){}return}else{r.debug("Fallback to text only for pipe syntax"),e.setText(i[1]);return}}}if(a.includes("[[")&&a.includes("]]")){r.debug("Found wiki link in file property:",a);let i=a.match(/\[\[([^\]]+)\]\]/);if(i){let n=i[1],c=n,d=n;if(n.includes("|")){let g=n.split("|");d=g[0],c=g[1]}else c=this.getCleanFilename(d);let l=e.createEl("a",{cls:"internal-link datacards-file-link",text:c,attr:{href:d,"data-href":d,"data-type":"link"}});return}}else if(a.startsWith("[[")&&a.endsWith("]]")){let i=a.substring(2,a.length-2),n=i,c=i;if(i.includes("|")){let l=i.split("|");c=l[0],n=l[1]}else n=this.getCleanFilename(c);let d=e.createEl("a",{cls:"internal-link datacards-file-link",text:n,attr:{href:c,"data-href":c,"data-type":"link"}})}else{let i=this.getCleanFilename(a),n=e.createEl("a",{cls:"internal-link datacards-file-link",text:i,attr:{href:a,"data-href":a,"data-type":"link"}})}}getCleanFilename(s){let t=s;return t.includes("/")&&(t=t.split("/").pop()||t),t.endsWith(".md")&&(t=t.substring(0,t.length-3)),t}formatAsTags(s,t,e){let a=s.createEl("div",{cls:"datacards-tags-container"});(Array.isArray(t)?t:[t]).forEach(i=>{let n=i.startsWith("#")?i:`#${i}`,c=a.createEl("a",{cls:"datacards-tag tag-link",text:n,attr:{href:n,"data-href":n,"data-type":"tag"}})})}shouldUseScrollableProperties(s){let t=!1;return(s.preset==="square"||s.preset==="compact")&&(t=!0),this.pluginSettings.scrollableProperties!==void 0&&(t=this.pluginSettings.scrollableProperties),this.isMobileDevice()&&this.pluginSettings.mobileScrollableProperties!==void 0&&(t=this.pluginSettings.mobileScrollableProperties),s.scrollableProperties!==void 0&&(t=s.scrollableProperties),t}getContentHeight(s){let t="200px";return this.pluginSettings.contentHeight&&(t=this.pluginSettings.contentHeight),this.isMobileDevice()&&this.pluginSettings.mobileContentHeight&&(t=this.pluginSettings.mobileContentHeight),s.contentHeight&&(t=s.contentHeight),t}};var k=class{constructor(s){this.plugin=s}isDataviewEnabled(){return this.plugin.app.plugins.plugins.dataview!==void 0}getDataviewApi(){return this.isDataviewEnabled()?this.plugin.app.plugins.plugins.dataview.api:null}async executeQuery(s,t,e){let a=this.getDataviewApi();if(!a)return null;try{return await a.query(s,t,e)}catch(o){throw r.error("Error executing Dataview query:",o),o}}async waitForDataviewReady(){let s=this.getDataviewApi();return s?s.index&&s.index.initialized?(r.debug("Dataview index is already initialized"),!0):(r.debug("Waiting for Dataview index to be ready..."),new Promise(t=>{let e=this.plugin.app,a=e.metadataCache.on("dataview:index-ready",()=>{r.debug("Dataview index is now ready"),e.metadataCache.offref(a),t(!0)});setTimeout(()=>{r.warn("Timed out waiting for Dataview index"),e.metadataCache.offref(a),t(!1)},5e3)})):!1}async executeSafeQuery(s,t,e,a=0){let o=this.getDataviewApi();if(!o)return r.error("Dataview API not found. Make sure Dataview plugin is enabled."),{successful:!1,value:"Dataview plugin is not enabled"};if(!s||s.trim()==="")return r.error("Empty Dataview query"),{successful:!1,value:"Empty query"};r.debug("Executing Dataview query:",s),r.debug("Source path:",t);try{if(typeof o.query=="function"){r.debug("Using api.query method");try{let i=await o.query(s,t,e);return r.debug("Direct query result type:",typeof i),i==null?(r.error("Direct query returned undefined or null"),{successful:!1,value:"No results returned"}):(i&&typeof i=="object"&&("values"in i&&Array.isArray(i.values)&&r.debug("Result contains a values array with length:",i.values.length),"headers"in i&&Array.isArray(i.headers)&&r.debug("Result contains headers:",i.headers)),i&&typeof i=="object"&&"values"in i&&Array.isArray(i.values)&&i.values.length===0&&a<3?(r.debug(`Empty result, retrying (attempt ${a+1}/3)...`),new Promise(n=>{setTimeout(async()=>{let c=await this.executeSafeQuery(s,t,e,a+1);n(c)},500)})):{successful:!0,value:i})}catch(i){return r.error("Error in direct query:",i),{successful:!1,value:i?i.message||String(i):"Error in query execution"}}}else return r.error("Dataview API query method not found."),{successful:!1,value:"Incompatible Dataview API version"}}catch(i){return r.error("Error executing Dataview query:",i),{successful:!1,value:i?i.message||String(i):"Unknown error"}}}};var D=class extends v.Plugin{constructor(){super(...arguments);this.isRefreshing=!1;this.lastActiveElement=null;this.refreshDebounceTimeout=2500;this.debouncedRefresh=(0,v.debounce)(t=>{this.refreshAffectedDataCards(t)},this.refreshDebounceTimeout)}async onload(){await this.loadSettings(),r.setDebugMode(this.settings.debugMode),this.parserService=new C,this.rendererService=new S(this.app,this.settings),this.dataviewApiUtil=new k(this),this.registerMarkdownCodeBlockProcessor("datacards",this.processDataCardsBlock.bind(this)),this.addSettingTab(new E(this.app,this)),this.addCommand({id:"refresh-datacards",name:"Refresh all DataCards",callback:()=>{this.refreshAllDataCards(!0)}}),this.registerDataviewEvents(),r.debug("DataCards plugin loaded")}registerDataviewEvents(){this.app.workspace.onLayoutReady(()=>{if(!this.dataviewApiUtil.isDataviewEnabled()){r.warn("Dataview plugin is not enabled, cannot register for metadata change events");return}this.registerEvent(this.app.metadataCache.on("dataview:metadata-change",(t,e)=>{this.handleMetadataChange(t,e)})),r.debug("Registered for Dataview metadata change events")})}handleMetadataChange(t,e){if(!this.settings.enableDynamicUpdates){r.debug("Dynamic updates are disabled globally, ignoring metadata change");return}r.debug(`Dataview metadata changed: ${t} for file ${e==null?void 0:e.path}`),this.debouncedRefresh(e)}refreshAffectedDataCards(t){t&&(this.lastActiveElement=document.activeElement,this.refreshAllDataCards(!1))}onunload(){r.debug("DataCards plugin unloaded")}async loadSettings(){this.settings=Object.assign({},x,await this.loadData())}async saveSettings(){await this.saveData(this.settings),r.setDebugMode(this.settings.debugMode),this.rendererService.updateSettings(this.settings),this.refreshAllDataCards(!0)}async processDataCardsBlock(t,e,a){if(r.debug("Processing DataCards block"),!this.dataviewApiUtil.isDataviewEnabled()){r.error("Dataview plugin is not enabled"),e.createEl("div",{cls:"datacards-error",text:"Dataview plugin is required but not enabled"});return}await this.dataviewApiUtil.waitForDataviewReady()||r.warn("Timed out waiting for Dataview to be ready");try{let{query:i,settings:n}=this.parserService.parseDataCardsBlock(t);r.debug("Parsed query:",i),r.debug("Parsed settings:",n);let c=a.sourcePath,d=document.createElement("div");d.style.display="none",document.body.appendChild(d);try{r.debug("Executing Dataview query");let l=await this.dataviewApiUtil.executeSafeQuery(i,c,d);if(document.body.removeChild(d),r.debug("Query result:",l),l&&l.value&&(r.debug("Result value type:",typeof l.value),r.debug("Is array?",Array.isArray(l.value)),typeof l.value=="object")){let h=Object.keys(l.value);r.debug("Result value keys:",h),h.forEach(p=>{r.debug(`result.value["${p}"] =`,l.value[p]),r.debug(`result.value["${p}"] type =`,typeof l.value[p]),r.debug(`result.value["${p}"] is array? =`,Array.isArray(l.value[p])),Array.isArray(l.value[p])&&r.debug(`result.value["${p}"] length =`,l.value[p].length),typeof l.value[p]=="object"&&l.value[p]!==null&&!Array.isArray(l.value[p])&&r.debug(`result.value["${p}"] keys =`,Object.keys(l.value[p]))}),"values"in l.value&&(r.debug("Result.value.values type:",typeof l.value.values),r.debug("Result.value.values is array?",Array.isArray(l.value.values)),Array.isArray(l.value.values)&&r.debug("Result.value.values length:",l.value.values.length))}if(!l){r.error("Result is undefined or null"),e.createEl("div",{cls:"datacards-error",text:"Error executing Dataview query: undefined result"});return}if(!l.successful){let h=`Error executing Dataview query: ${l.value||"unknown error"}`;r.error(h),e.createEl("div",{cls:"datacards-error",text:h});return}if(l.value&&typeof l.value=="object"&&"successful"in l.value&&l.value.successful===!1){let h=`Error executing Dataview query: ${l.value.error||"unknown error"}`;r.error(h),e.createEl("div",{cls:"datacards-error",text:h});return}if(l.value===void 0||l.value===null){r.error("Dataview returned null or undefined value"),e.createEl("div",{cls:"datacards-error",text:"Dataview returned no results. Make sure your query is correct and returns data."});return}if(Array.isArray(l.value)&&l.value.length===0){r.debug("Dataview returned empty array - using super simple approach"),r.debug("Empty array detected, using simple approach"),e.innerHTML='<h3 style="color: red; background-color: yellow; padding: 20px; margin: 20px; border: 3px solid black;">NO NOTES FOUND (Empty Array)</h3>',r.debug("Created simple empty state message for empty array");return}if(l.value.values&&Array.isArray(l.value.values)&&l.value.values.length===0){r.debug("Dataview returned empty table - using super simple approach"),r.debug("Empty table detected, using simple approach"),e.innerHTML='<h3 style="color: red; background-color: yellow; padding: 20px; margin: 20px; border: 3px solid black;">NO NOTES FOUND (Empty Table)</h3>',r.debug("Created simple empty state message for empty table");return}if(l.value.data&&Array.isArray(l.value.data)&&l.value.data.length===0){r.debug("Dataview returned empty data array - using super simple approach"),r.debug("Empty data array detected, using simple approach"),e.innerHTML='<h3 style="color: red; background-color: yellow; padding: 20px; margin: 20px; border: 3px solid black;">NO NOTES FOUND (Empty Data Array)</h3>',r.debug("Created simple empty state message for empty data array");return}if(l.value.rows&&Array.isArray(l.value.rows)&&l.value.rows.length===0){r.debug("Dataview returned empty rows array - using super simple approach"),r.debug("Empty rows array detected, using simple approach"),e.innerHTML='<h3 style="color: red; background-color: yellow; padding: 20px; margin: 20px; border: 3px solid black;">NO NOTES FOUND (Empty Rows Array)</h3>',r.debug("Created simple empty state message for empty rows array");return}if(typeof l.value=="object"&&l.value!==null&&!Array.isArray(l.value)){let h=Object.keys(l.value).filter(f=>f!=="successful"&&f!=="error"&&f!=="type"&&f!=="headers");if(h.length===0||h.every(f=>{let y=l.value[f];return Array.isArray(y)&&y.length===0})){r.debug("Dataview returned empty result (catch-all) - using super simple approach"),r.debug("Empty result detected (catch-all), using simple approach"),e.innerHTML='<h3 style="color: red; background-color: yellow; padding: 20px; margin: 20px; border: 3px solid black;">NO NOTES FOUND (Empty Result)</h3>',r.debug("Created simple empty state message for empty result (catch-all)");return}}let g=l.value;g&&typeof g=="object"&&"successful"in g&&"value"in g&&(r.debug("Unwrapping nested result structure"),g=g.value),n.dynamicUpdate!==void 0&&r.debug(`Card has dynamicUpdate setting: ${n.dynamicUpdate}`);let u=!1;if(r.debug("SPECIAL CHECK - dataToRender:",g),g&&typeof g=="object"&&Object.keys(g).length===2)r.debug("Found object with exactly 2 keys"),u=!0;else if(Array.isArray(g)&&g.length===0)u=!0;else if(g&&typeof g=="object"&&"values"in g&&Array.isArray(g.values)&&g.values.length===0)u=!0;else if(g&&typeof g=="object"&&"data"in g&&Array.isArray(g.data)&&g.data.length===0)u=!0;else if(g&&typeof g=="object"&&"rows"in g&&Array.isArray(g.rows)&&g.rows.length===0)u=!0;else if(g&&typeof g=="object"&&!Array.isArray(g)){let h=Object.keys(g).filter(p=>p!=="successful"&&p!=="error"&&p!=="type"&&p!=="headers");u=h.length===0||h.every(p=>{let f=g[p];return Array.isArray(f)&&f.length===0})}if(u){r.debug("Empty result detected, using renderEmptyState"),this.rendererService.renderEmptyState(e,"No notes found");return}this.rendererService.renderCards(e,g,n)}catch(l){r.error("Error executing Dataview query:",l),document.body.contains(d)&&document.body.removeChild(d),e.createEl("div",{cls:"datacards-error",text:`Error executing Dataview query: ${l.message||String(l)}`})}}catch(i){r.error("DataCards error:",i),e.createEl("div",{cls:"datacards-error",text:`Error processing DataCards block: ${i.message||String(i)}`})}}refreshAllDataCards(t=!0){if(this.isRefreshing)return;this.isRefreshing=!0;let e=this.app.workspace.getActiveViewOfType(v.MarkdownView);e?(e.previewMode.rerender(!0),t&&new v.Notice("DataCards refreshed",2e3),setTimeout(()=>{this.lastActiveElement&&document.body.contains(this.lastActiveElement)&&this.lastActiveElement.focus(),this.isRefreshing=!1},50)):(t&&new v.Notice("No active markdown view to refresh",2e3),this.isRefreshing=!1)}};
