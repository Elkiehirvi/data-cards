/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin-
*/

var C=Object.defineProperty;var M=Object.getOwnPropertyDescriptor;var A=Object.getOwnPropertyNames;var H=Object.prototype.hasOwnProperty;var k=(h,s)=>{for(var e in s)C(h,e,{get:s[e],enumerable:!0})},L=(h,s,e,t)=>{if(s&&typeof s=="object"||typeof s=="function")for(let a of A(s))!H.call(h,a)&&a!==e&&C(h,a,{get:()=>s[a],enumerable:!(t=M(s,a))||t.enumerable});return h};var F=h=>L(C({},"__esModule",{value:!0}),h);var I={};k(I,{default:()=>E});module.exports=F(I);var b=require("obsidian");var v={preset:"grid",imageProperty:"cover",imageHeight:"200px",imageFit:"cover",properties:"all",exclude:[],scrollableProperties:!1,contentHeight:"200px",showLabels:!0,cardSpacing:16,enableShadows:!0,defaultDateFormat:"YYYY-MM-DD",propertyFormatters:{},mobileColumns:1,mobilePreset:"grid",mobileImageHeight:"150px",mobileScrollableProperties:!0,mobileContentHeight:"150px",forceMobileMode:!1,enableLazyLoading:!1,debugMode:!1};var m=require("obsidian"),w=class extends m.PluginSettingTab{constructor(e,t){super(e,t);this.plugin=t}display(){let{containerEl:e}=this;e.empty(),e.createEl("h2",{text:"DataCards Settings"}),e.createEl("h3",{text:"Preset Settings"}),new m.Setting(e).setName("Default Preset").setDesc("Choose the default preset for cards").addDropdown(a=>a.addOption("grid","Grid (balanced, 3 columns)").addOption("portrait","Portrait (optimized for book covers, 3 columns)").addOption("square","Square (1:1 cards with minimal text, 4 columns)").addOption("compact","Compact (side-by-side layout, 4 columns)").addOption("dense","Dense (maximum density, 6 columns)").setValue(this.plugin.settings.preset).onChange(async r=>{this.plugin.settings.preset=r,await this.plugin.saveSettings()})),e.createEl("h3",{text:"Image Settings"}),new m.Setting(e).setName("Default Image Property").setDesc("The frontmatter property to use for images").addText(a=>a.setPlaceholder("cover").setValue(this.plugin.settings.imageProperty).onChange(async r=>{this.plugin.settings.imageProperty=r,await this.plugin.saveSettings()})),e.createEl("h3",{text:"Display Settings"}),new m.Setting(e).setName("Show Property Labels").setDesc("Show labels for properties").addToggle(a=>a.setValue(this.plugin.settings.showLabels).onChange(async r=>{this.plugin.settings.showLabels=r,await this.plugin.saveSettings()})),new m.Setting(e).setName("Card Spacing").setDesc("Space between cards (in pixels)").addSlider(a=>a.setLimits(0,32,4).setValue(this.plugin.settings.cardSpacing).setDynamicTooltip().onChange(async r=>{this.plugin.settings.cardSpacing=r,await this.plugin.saveSettings()})),new m.Setting(e).setName("Enable Card Shadows").setDesc("Add subtle shadows to cards for a more three-dimensional appearance").addToggle(a=>a.setValue(this.plugin.settings.enableShadows).onChange(async r=>{this.plugin.settings.enableShadows=r,await this.plugin.saveSettings()})),e.createEl("h3",{text:"Card Content Settings"}),new m.Setting(e).setName("Scrollable Properties").setDesc("Enable scrolling for card properties when they exceed the content height (Note: Square and Compact presets are scrollable by default)").addToggle(a=>a.setValue(this.plugin.settings.scrollableProperties).onChange(async r=>{this.plugin.settings.scrollableProperties=r,await this.plugin.saveSettings()})),new m.Setting(e).setName("Content Height").setDesc("Height of the scrollable content area (e.g., 200px)").addText(a=>a.setPlaceholder("200px").setValue(this.plugin.settings.contentHeight).onChange(async r=>{this.plugin.settings.contentHeight=r||"200px",await this.plugin.saveSettings()})),e.createEl("h3",{text:"Formatting Settings"}),new m.Setting(e).setName("Default Date Format").setDesc("Format for displaying dates (YYYY = year, MM = month, DD = day)").addText(a=>a.setPlaceholder("YYYY-MM-DD").setValue(this.plugin.settings.defaultDateFormat).onChange(async r=>{this.plugin.settings.defaultDateFormat=r||"YYYY-MM-DD",await this.plugin.saveSettings()})),e.createEl("h3",{text:"Mobile Settings"}),new m.Setting(e).setName("Mobile Preset").setDesc("Preset to use on mobile devices (all presets default to 1 column on mobile)").addDropdown(a=>a.addOption("grid","Grid (balanced)").addOption("portrait","Portrait (optimized for book covers)").addOption("square","Square (1:1 cards with minimal text)").addOption("compact","Compact (side-by-side layout)").addOption("dense","Dense (maximum density)").setValue(this.plugin.settings.mobilePreset).onChange(async r=>{this.plugin.settings.mobilePreset=r,await this.plugin.saveSettings()})),new m.Setting(e).setName("Mobile Scrollable Properties").setDesc("Enable scrolling for card properties on mobile devices").addToggle(a=>a.setValue(this.plugin.settings.mobileScrollableProperties).onChange(async r=>{this.plugin.settings.mobileScrollableProperties=r,await this.plugin.saveSettings()})),new m.Setting(e).setName("Mobile Content Height").setDesc("Height of the scrollable content area on mobile devices").addText(a=>a.setPlaceholder("150px").setValue(this.plugin.settings.mobileContentHeight).onChange(async r=>{this.plugin.settings.mobileContentHeight=r||"150px",await this.plugin.saveSettings()})),new m.Setting(e).setName("Force Mobile Mode").setDesc("Force the plugin to use mobile settings even on desktop (for testing)").addToggle(a=>a.setValue(this.plugin.settings.forceMobileMode).onChange(async r=>{this.plugin.settings.forceMobileMode=r,await this.plugin.saveSettings()})),e.createEl("h3",{text:"Performance Settings"}),new m.Setting(e).setName("Enable Lazy Loading").setDesc("Only load images when they become visible (improves performance with many cards)").addToggle(a=>a.setValue(this.plugin.settings.enableLazyLoading).onChange(async r=>{this.plugin.settings.enableLazyLoading=r,await this.plugin.saveSettings()})),e.createEl("h3",{text:"Developer Settings"}),new m.Setting(e).setName("Debug Mode").setDesc("Enable debug logging (only use during development or troubleshooting)").addToggle(a=>a.setValue(this.plugin.settings.debugMode).onChange(async r=>{this.plugin.settings.debugMode=r,await this.plugin.saveSettings()})),e.createEl("h3",{text:"Help"});let t=e.createEl("div");t.innerHTML=`
      <p><strong>Basic Usage:</strong><br>
      Use the <code>datacards</code> code block to create card layouts from Dataview queries.</p>
      
      <p><strong>Example:</strong></p>
      <pre><code>
\`\`\`datacards
TABLE title, author, rating, cover FROM #books
SORT rating DESC

// Settings
preset: grid
imageFit: contain
defaultDateFormat: YYYY
\`\`\`
      </code></pre>
      
      <p><strong>Important:</strong> You must explicitly include all properties you want to display in your Dataview query (including the image property).</p>
      
      <p><strong>Image Support:</strong><br>
      The plugin supports external URLs, vault images, and wiki links:<br>
      <code>cover: https://example.com/image.jpg</code> or <code>cover: [[path/to/image.jpg]]</code></p>     
    
      <p><strong>Tip:</strong> Data Cards works best with the Editor-Setting "Readable line length" disabled. </p><br>
      
      <p><a href="https://github.com/Sophokles187/data-cards" target="_blank" rel="noopener">View complete documentation and examples on GitHub</a></p>
    `}};var n=class{static setDebugMode(s){this.debugMode=s}static error(s,...e){console.error(`[DataCards] ${s}`,...e)}static warn(s,...e){console.warn(`[DataCards] ${s}`,...e)}static debug(s,...e){this.debugMode&&console.log(`[DataCards] ${s}`,...e)}};n.debugMode=!1;var S=class{parseDataCardsBlock(s){n.debug("Parsing datacards block");let e=/\n-{3,}\n|\n\/\/\s*Settings.*|\n\/\*\s*Settings\s*\*\/.*/,t=s.match(e),a=/^\/\/\s*Settings.*/,r=s.match(a),i,o;t&&t.index!==void 0?(n.debug("Found settings separator at index:",t.index),i=s.substring(0,t.index).trim(),o=s.substring(t.index+t[0].length).trim()):r?(n.debug("Block starts with settings marker"),i="",o=s.substring(r[0].length).trim()):(n.debug("No settings separator found"),i=s.trim(),o=""),n.debug("Extracted query:",i),i=this.ensureQueryType(i);let d=this.parseSettings(o);return{query:i,settings:d}}ensureQueryType(s){if(!/\b(TABLE|LIST|TASK|CALENDAR)\b/i.test(s)){let t=s.split(`
`),a=-1;for(let r=0;r<t.length;r++){let i=t[r].trim();if(i&&!i.startsWith("//")&&!i.startsWith("/*")){a=r;break}}if(a>=0){let r=this.parseSettings(t.slice(a+1).join(`
`)),i="",o=[];return r.imageProperty&&o.push(r.imageProperty),i="",n.debug("Using simple TABLE query without property list"),i.trim()===""?t[a]="TABLE "+t[a]:t[a]="TABLE"+i+" "+t[a],t.join(`
`)}else return"TABLE "+s}return s}parseSettings(s){if(!s)return{};let e={},t=s.split(`
`);n.debug("Parsing settings from text");for(let a of t){if(a.trim().startsWith("//")||a.trim().startsWith("/*")||!a.trim())continue;let r=a.match(/^\s*([a-zA-Z0-9_]+)\s*:\s*(.+)\s*$/);if(r){let[,i,o]=r;if(n.debug(`Found setting: ${i} = ${o}`),i==="properties"&&o.trim().startsWith("[")&&o.trim().endsWith("]")){n.debug("Detected properties array");let d=o.substring(1,o.length-1).trim();if(d){let l=d.split(",").map(c=>c.trim());e[i]=l}else e[i]=[]}else i==="defaultDateFormat"?e[i]=o.trim():e[i]=this.parseValue(o.trim())}}return e}parseValue(s){n.debug("Parsing value:",s);try{return JSON.parse(s)}catch(e){}if(s.startsWith("[")&&s.endsWith("]")){n.debug("Detected array syntax");let e=s.substring(1,s.length-1).trim();return e?e.split(",").map(a=>a.trim()):[]}return/^-?\d+(\.\d+)?$/.test(s)?Number(s):s.toLowerCase()==="true"?!0:s.toLowerCase()==="false"?!1:s}};var T=require("obsidian");var x=class{constructor(s,e){this.currentSettings=null;this.app=s,this.pluginSettings=e}updateSettings(s){this.pluginSettings=s}isMobileDevice(){return T.Platform.isMobile||this.pluginSettings.forceMobileMode}renderCards(s,e,t){let a=this.isMobileDevice();n.debug("Is mobile device:",a);let r={...this.pluginSettings};n.debug("Initial settings from plugin:",{preset:r.preset,imageHeight:r.imageHeight,mobileColumns:r.mobileColumns,mobilePreset:r.mobilePreset,mobileImageHeight:r.mobileImageHeight}),r={...r,...t},n.debug("After applying block settings:",{preset:r.preset,imageHeight:r.imageHeight,mobileColumns:r.mobileColumns,mobilePreset:r.mobilePreset,mobileImageHeight:r.mobileImageHeight}),a&&(n.debug("Applying mobile settings..."),n.debug(`Using mobile columns: ${r.mobileColumns}`),r.mobilePreset!==void 0&&(n.debug(`Overriding preset: ${r.preset} with mobilePreset: ${r.mobilePreset}`),r.preset=r.mobilePreset),r.mobileImageHeight!==void 0&&(n.debug(`Overriding imageHeight: ${r.imageHeight} with mobileImageHeight: ${r.mobileImageHeight}`),r.imageHeight=r.mobileImageHeight),n.debug("Final settings after applying mobile settings:",{preset:r.preset,imageHeight:r.imageHeight})),this.currentSettings=r;let i=s.createEl("div",{cls:"datacards-container"});i.addClass(`datacards-preset-${r.preset}`),r.enableShadows||i.addClass("datacards-no-shadows"),i.style.setProperty("--card-gap",`${r.cardSpacing}px`);let o;if(a)o=r.mobileColumns;else{let l=3;r.preset==="dense"?l=6:r.preset==="compact"||r.preset==="square"?l=4:r.preset==="portrait"&&(l=3),o=t.columns!==void 0?t.columns:l}n.debug(`Using ${o} columns`),i.style.setProperty("--card-columns",o.toString(),"important");let d;if(t.imageHeight!==void 0?d=r.imageHeight:r.preset==="portrait"?d="350px":r.preset==="square"||r.preset==="compact"?d="200px":r.preset==="dense"?d="120px":d="200px",(typeof d=="number"||/^\d+$/.test(d))&&(d=`${d}px`),i.style.setProperty("--image-height",d),t.imageFit!==void 0)i.style.setProperty("--image-fit",r.imageFit);else{let l=r.preset==="portrait"?"contain":"cover";i.style.setProperty("--image-fit",l)}e&&e.values&&Array.isArray(e.values)?(n.debug("Detected table-like results with values array"),this.renderTableResults(i,e,r)):e&&Array.isArray(e)?(n.debug("Detected array results"),this.renderArrayResults(i,e,r)):e&&typeof e=="object"?(n.debug("Detected object results"),this.renderObjectResults(i,e,r)):(n.debug("No valid results detected"),this.renderError(i,"No results or unsupported result type"))}renderError(s,e){let t=s.createEl("div",{cls:"datacards-error",text:e})}renderTableResults(s,e,t){let{values:a,headers:r}=e;n.debug("Rendering table results:"),n.debug("- Headers:",r),n.debug("- Number of rows:",a.length),a.forEach((i,o)=>{n.debug(`Processing row ${o}`);let d=this.createCardElement(s);if(t.imageProperty&&r.includes(t.imageProperty)){let u=r.indexOf(t.imageProperty),f=i[u];n.debug(`Image property '${t.imageProperty}' value:`,f),f&&this.addImageToCard(d,f)}else t.imageProperty&&n.debug(`Image property '${t.imageProperty}' not found in headers:`,r);let l=d.createEl("div",{cls:"datacards-content"});if(r.includes("File")||r.includes("file")){let u=r.findIndex(f=>f.toLowerCase()==="file");if(u>=0){let f=i[u];n.debug("File property value:",f);let y=l.createEl("div",{cls:"datacards-property datacards-file-property-container"});this.formatFileProperty(y,f)}}let c=l.createEl("div",{cls:"datacards-properties-container"});if(this.shouldUseScrollableProperties(t)){c.addClass("datacards-scrollable-properties");let u=this.getContentHeight(t);c.style.setProperty("--content-height",u)}let g=[];t.properties==="all"?(g=[...r],n.debug("Using all headers as properties:",g)):Array.isArray(t.properties)?(g=[...t.properties],n.debug("Using specified properties:",g)):n.debug("No properties specified, using empty array");let P=g.filter(u=>!t.exclude.includes(u)&&u!==t.imageProperty&&u.toLowerCase()!=="file");n.debug("Filtered properties (after excluding file):",P),P.forEach(u=>{if(n.debug(`Checking property '${u}' in headers:`,r.includes(u)),r.includes(u)){let f=r.indexOf(u),y=i[f];n.debug(`Property '${u}' value:`,y),this.addPropertyToCard(c,u,y,t)}else n.debug(`Property '${u}' not found in headers`)}),P.length===0&&!r.some(u=>u.toLowerCase()==="file")&&(n.debug("No properties were added to the card"),l.createEl("div",{cls:"datacards-property",text:"No properties to display"}))})}renderArrayResults(s,e,t){e.forEach(a=>{let r=this.createCardElement(s);t.imageProperty&&a[t.imageProperty]&&this.addImageToCard(r,a[t.imageProperty]);let i=r.createEl("div",{cls:"datacards-content"});if("file"in a){let g=i.createEl("div",{cls:"datacards-property datacards-file-property-container"});this.formatFileProperty(g,a.file)}let o=i.createEl("div",{cls:"datacards-properties-container"});if(this.shouldUseScrollableProperties(t)){o.addClass("datacards-scrollable-properties");let g=this.getContentHeight(t);o.style.setProperty("--content-height",g)}let l=Object.keys(a);(t.properties==="all"?l:Array.isArray(t.properties)?t.properties:[]).filter(g=>!t.exclude.includes(g)&&g!==t.imageProperty&&g.toLowerCase()!=="file").forEach(g=>{g in a&&this.addPropertyToCard(o,g,a[g],t)})})}renderObjectResults(s,e,t){let a=this.createCardElement(s);t.imageProperty&&e[t.imageProperty]&&this.addImageToCard(a,e[t.imageProperty]);let r=a.createEl("div",{cls:"datacards-content"});if("file"in e){let p=r.createEl("div",{cls:"datacards-property datacards-file-property-container"});this.formatFileProperty(p,e.file)}let i=r.createEl("div",{cls:"datacards-properties-container"});if(this.shouldUseScrollableProperties(t)){i.addClass("datacards-scrollable-properties");let p=this.getContentHeight(t);i.style.setProperty("--content-height",p)}let d=Object.keys(e);(t.properties==="all"?d:Array.isArray(t.properties)?t.properties:[]).filter(p=>!t.exclude.includes(p)&&p!==t.imageProperty&&p.toLowerCase()!=="file").forEach(p=>{p in e&&this.addPropertyToCard(i,p,e[p],t)})}createCardElement(s){return s.createEl("div",{cls:"datacards-card"})}addImageToCard(s,e){var i;let t=s.createEl("div",{cls:"datacards-image-container"}),a;typeof e=="object"&&e!==null?(n.debug("Image value is an object:",e),"path"in e?(a=e.path,n.debug("Extracted path from Link object:",a)):(a=String(e),n.debug("Converted object to string:",a))):(a=String(e),n.debug("Image value is a string:",a));let r=t.createEl("div",{cls:"datacards-image-placeholder",text:"Loading image..."});(i=this.currentSettings)!=null&&i.enableLazyLoading?this.lazyLoadImage(t,r,a):this.loadImage(t,r,a)}lazyLoadImage(s,e,t){n.debug("Lazy loading image:",t),new IntersectionObserver((r,i)=>{r.forEach(o=>{o.isIntersecting&&(n.debug("Image container is now visible, loading image:",t),this.loadImage(s,e,t),i.disconnect())})},{rootMargin:"100px",threshold:.1}).observe(s)}loadImage(s,e,t){if(t.startsWith("http")||t.startsWith("https")){n.debug("Handling as external URL");let a=s.createEl("img",{cls:"datacards-image",attr:{src:t}});a.onload=()=>{e.remove(),a.addClass("loaded")},a.onerror=()=>{e.setText("Image not found")}}else if(t.startsWith("[[")&&t.endsWith("]]")){n.debug("Handling as wiki link");let a=t.substring(2,t.length-2),r=a;a.includes("|")&&(r=a.split("|")[0]);try{let i=this.app.vault.getAbstractFileByPath(r);if(i&&"stat"in i){n.debug("Found file in vault:",i);let o=i,d=this.app.vault.getResourcePath(o);n.debug("Resource path:",d);let l=s.createEl("img",{cls:"datacards-image",attr:{src:d}});l.onload=()=>{e.remove(),l.addClass("loaded")},l.onerror=()=>{e.setText("Image not found")}}else n.debug("File not found in vault or not a file:",r),e.setText("Image not found")}catch(i){n.error("Error loading image:",i),e.setText("Error loading image")}}else{n.debug("Handling as local path");try{let a=this.app.vault.getAbstractFileByPath(t);if(a&&"stat"in a){n.debug("Found file in vault:",a);let r=a,i=this.app.vault.getResourcePath(r);n.debug("Resource path:",i);let o=s.createEl("img",{cls:"datacards-image",attr:{src:i}});o.onload=()=>{e.remove(),o.addClass("loaded")},o.onerror=()=>{e.setText("Image not found")}}else n.debug("File not found in vault:",t),e.setText("Image not found")}catch(a){n.error("Error loading image:",a),e.setText("Error loading image")}}}addPropertyToCard(s,e,t,a){n.debug(`Adding property to card: ${e} = ${t}`),n.debug(`Property type: ${typeof t}`);let r=s.createEl("div",{cls:"datacards-property"});if(a.showLabels&&r.createEl("div",{cls:"datacards-property-label",text:e}),e.toLowerCase()==="file")this.formatFileProperty(r,t);else{let i=a.propertyFormatters[e];i?this.formatPropertyWithCustomFormatter(r,t,i):this.formatPropertyByType(r,t)}}formatPropertyWithCustomFormatter(s,e,t){let a=s.createEl("div",{cls:"datacards-property-value"});switch(t.type){case"stars":this.formatAsStars(a,e,t.options);break;case"badge":this.formatAsBadge(a,e,t.options);break;case"progress":this.formatAsProgress(a,e,t.options);break;case"date":this.formatAsDate(a,e,t.options);break;case"tags":this.formatAsTags(a,e,t.options);break;default:a.setText(String(e))}}formatPropertyByType(s,e){let t=s.createEl("div",{cls:"datacards-property-value"});if(e==null)t.setText("");else if(Array.isArray(e))t.setText(e.join(", "));else if(typeof e=="boolean"){let a=t.createEl("input",{attr:{type:"checkbox",checked:e?"checked":"",disabled:"disabled"}})}else if(typeof e=="number")t.setText(e.toString());else if(e instanceof Date)this.formatAsDate(t,e);else if(typeof e=="string"){if(/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{3}[+-]\d{2}:\d{2}$/.test(e)||/^\d{4}-\d{2}-\d{2}$/.test(e)){let r=new Date(e);if(!isNaN(r.getTime())){this.formatAsDate(t,r);return}}if(e.startsWith("[[")&&e.endsWith("]]")){let r=e.substring(2,e.length-2),i=r,o=r;if(r.includes("|")){let l=r.split("|");o=l[0],i=l[1]}let d=t.createEl("a",{cls:"internal-link",text:i,attr:{href:o,"data-href":o,"data-type":"link"}})}else if(e.startsWith("#")){let r=t.createEl("a",{cls:"datacards-tag tag-link",text:e,attr:{href:e,"data-href":e,"data-type":"tag"}})}else t.setText(e)}else if(typeof e=="object"&&e!==null){if("ts"in e&&typeof e.ts=="number"){let a=new Date(e.ts);if(!isNaN(a.getTime())){this.formatAsDate(t,a);return}}t.setText(String(e))}else t.setText(String(e))}formatAsStars(s,e,t){let a=(t==null?void 0:t.max)||5,r="\u2605",i="\u2606",o=s.createEl("div",{cls:"datacards-stars"}),d=Math.min(Math.max(0,e),a);for(let l=0;l<d;l++)o.createEl("span",{cls:"datacards-star datacards-star-full",text:r});for(let l=d;l<a;l++)o.createEl("span",{cls:"datacards-star datacards-star-empty",text:i})}formatAsBadge(s,e,t){let a=s.createEl("span",{cls:"datacards-badge",text:e});t!=null&&t.color&&(a.style.backgroundColor=t.color)}formatAsProgress(s,e,t){let a=(t==null?void 0:t.max)||100,r=Math.min(Math.max(0,e),a)/a*100,i=s.createEl("div",{cls:"datacards-progress-container"}),o=i.createEl("div",{cls:"datacards-progress-bar"});o.style.width=`${r}%`,t!=null&&t.showText&&i.createEl("span",{cls:"datacards-progress-text",text:`${Math.round(r)}%`})}formatAsDate(s,e,t){let a=typeof e=="string"?new Date(e):e;if(isNaN(a.getTime())){s.setText(String(e));return}let r=(t==null?void 0:t.format)||(this.currentSettings?this.currentSettings.defaultDateFormat:v.defaultDateFormat),i=a.getFullYear(),o=(a.getMonth()+1).toString().padStart(2,"0"),d=a.getDate().toString().padStart(2,"0"),l=r.replace("YYYY",i.toString()).replace("MM",o).replace("DD",d);s.setText(l)}formatFileProperty(s,e){let t=s.createEl("div",{cls:"datacards-property-value datacards-file-property"});if(e==null){t.setText("");return}let a;if(typeof e=="object"&&e!==null?"path"in e?a=e.path:"link"in e?a=e.link:a=String(e):a=String(e),a.startsWith("[[")&&a.endsWith("]]")){let r=a.substring(2,a.length-2),i=r,o=r;if(r.includes("|")){let l=r.split("|");o=l[0],i=l[1]}else i=this.getCleanFilename(o);let d=t.createEl("a",{cls:"internal-link datacards-file-link",text:i,attr:{href:o,"data-href":o,"data-type":"link"}})}else{let r=this.getCleanFilename(a),i=t.createEl("a",{cls:"internal-link datacards-file-link",text:r,attr:{href:a,"data-href":a,"data-type":"link"}})}}getCleanFilename(s){let e=s;return e.includes("/")&&(e=e.split("/").pop()||e),e.endsWith(".md")&&(e=e.substring(0,e.length-3)),e}formatAsTags(s,e,t){let a=s.createEl("div",{cls:"datacards-tags-container"});(Array.isArray(e)?e:[e]).forEach(i=>{let o=i.startsWith("#")?i:`#${i}`,d=a.createEl("a",{cls:"datacards-tag tag-link",text:o,attr:{href:o,"data-href":o,"data-type":"tag"}})})}shouldUseScrollableProperties(s){let e=!1;return(s.preset==="square"||s.preset==="compact")&&(e=!0),this.pluginSettings.scrollableProperties!==void 0&&(e=this.pluginSettings.scrollableProperties),this.isMobileDevice()&&this.pluginSettings.mobileScrollableProperties!==void 0&&(e=this.pluginSettings.mobileScrollableProperties),s.scrollableProperties!==void 0&&(e=s.scrollableProperties),e}getContentHeight(s){let e="200px";return this.pluginSettings.contentHeight&&(e=this.pluginSettings.contentHeight),this.isMobileDevice()&&this.pluginSettings.mobileContentHeight&&(e=this.pluginSettings.mobileContentHeight),s.contentHeight&&(e=s.contentHeight),e}};var D=class{constructor(s){this.plugin=s}isDataviewEnabled(){return this.plugin.app.plugins.plugins.dataview!==void 0}getDataviewApi(){return this.isDataviewEnabled()?this.plugin.app.plugins.plugins.dataview.api:null}async executeQuery(s,e,t){let a=this.getDataviewApi();if(!a)return null;try{return await a.query(s,e,t)}catch(r){throw n.error("Error executing Dataview query:",r),r}}async waitForDataviewReady(){let s=this.getDataviewApi();return s?s.index&&s.index.initialized?(n.debug("Dataview index is already initialized"),!0):(n.debug("Waiting for Dataview index to be ready..."),new Promise(e=>{let t=this.plugin.app,a=t.metadataCache.on("dataview:index-ready",()=>{n.debug("Dataview index is now ready"),t.metadataCache.offref(a),e(!0)});setTimeout(()=>{n.warn("Timed out waiting for Dataview index"),t.metadataCache.offref(a),e(!1)},5e3)})):!1}async executeSafeQuery(s,e,t,a=0){let r=this.getDataviewApi();if(!r)return n.error("Dataview API not found. Make sure Dataview plugin is enabled."),{successful:!1,value:"Dataview plugin is not enabled"};if(!s||s.trim()==="")return n.error("Empty Dataview query"),{successful:!1,value:"Empty query"};n.debug("Executing Dataview query:",s),n.debug("Source path:",e);try{if(typeof r.query=="function"){n.debug("Using api.query method");try{let i=await r.query(s,e,t);return n.debug("Direct query result type:",typeof i),i==null?(n.error("Direct query returned undefined or null"),{successful:!1,value:"No results returned"}):(i&&typeof i=="object"&&("values"in i&&Array.isArray(i.values)&&n.debug("Result contains a values array with length:",i.values.length),"headers"in i&&Array.isArray(i.headers)&&n.debug("Result contains headers:",i.headers)),i&&typeof i=="object"&&"values"in i&&Array.isArray(i.values)&&i.values.length===0&&a<3?(n.debug(`Empty result, retrying (attempt ${a+1}/3)...`),new Promise(o=>{setTimeout(async()=>{let d=await this.executeSafeQuery(s,e,t,a+1);o(d)},500)})):{successful:!0,value:i})}catch(i){return n.error("Error in direct query:",i),{successful:!1,value:i?i.message||String(i):"Error in query execution"}}}else return n.error("Dataview API query method not found."),{successful:!1,value:"Incompatible Dataview API version"}}catch(i){return n.error("Error executing Dataview query:",i),{successful:!1,value:i?i.message||String(i):"Unknown error"}}}};var E=class extends b.Plugin{async onload(){await this.loadSettings(),n.setDebugMode(this.settings.debugMode),this.parserService=new S,this.rendererService=new x(this.app,this.settings),this.dataviewApiUtil=new D(this),this.registerMarkdownCodeBlockProcessor("datacards",this.processDataCardsBlock.bind(this)),this.addSettingTab(new w(this.app,this)),this.addCommand({id:"refresh-datacards",name:"Refresh all DataCards",callback:()=>{this.refreshAllDataCards()}}),n.debug("DataCards plugin loaded")}onunload(){n.debug("DataCards plugin unloaded")}async loadSettings(){this.settings=Object.assign({},v,await this.loadData())}async saveSettings(){await this.saveData(this.settings),n.setDebugMode(this.settings.debugMode),this.rendererService.updateSettings(this.settings),this.refreshAllDataCards()}async processDataCardsBlock(e,t,a){if(n.debug("Processing DataCards block"),!this.dataviewApiUtil.isDataviewEnabled()){n.error("Dataview plugin is not enabled"),t.createEl("div",{cls:"datacards-error",text:"Dataview plugin is required but not enabled"});return}await this.dataviewApiUtil.waitForDataviewReady()||n.warn("Timed out waiting for Dataview to be ready");try{let{query:i,settings:o}=this.parserService.parseDataCardsBlock(e);n.debug("Parsed query:",i),n.debug("Parsed settings:",o);let d=a.sourcePath,l=document.createElement("div");l.style.display="none",document.body.appendChild(l);try{n.debug("Executing Dataview query");let c=await this.dataviewApiUtil.executeSafeQuery(i,d,l);if(document.body.removeChild(l),!c){n.error("Result is undefined or null"),t.createEl("div",{cls:"datacards-error",text:"Error executing Dataview query: undefined result"});return}if(!c.successful){let g=`Error executing Dataview query: ${c.value||"unknown error"}`;n.error(g),t.createEl("div",{cls:"datacards-error",text:g});return}if(c.value&&typeof c.value=="object"&&"successful"in c.value&&c.value.successful===!1){let g=`Error executing Dataview query: ${c.value.error||"unknown error"}`;n.error(g),t.createEl("div",{cls:"datacards-error",text:g});return}if(c.value===void 0||c.value===null){n.error("Dataview returned null or undefined value"),t.createEl("div",{cls:"datacards-error",text:"Dataview returned no results. Make sure your query is correct and returns data."});return}if(Array.isArray(c.value)&&c.value.length===0){n.debug("Dataview returned empty array"),t.createEl("div",{cls:"datacards-info",text:"No files match your query criteria."});return}if(c.value.values&&Array.isArray(c.value.values)&&c.value.values.length===0){n.debug("Dataview returned empty table"),t.createEl("div",{cls:"datacards-info",text:"No files match your query criteria."});return}let p=c.value;p&&typeof p=="object"&&"successful"in p&&"value"in p&&(n.debug("Unwrapping nested result structure"),p=p.value),this.rendererService.renderCards(t,p,o)}catch(c){n.error("Error executing Dataview query:",c),document.body.contains(l)&&document.body.removeChild(l),t.createEl("div",{cls:"datacards-error",text:`Error executing Dataview query: ${c.message||String(c)}`})}}catch(i){n.error("DataCards error:",i),t.createEl("div",{cls:"datacards-error",text:`Error processing DataCards block: ${i.message||String(i)}`})}}refreshAllDataCards(){let e=this.app.workspace.getActiveViewOfType(b.MarkdownView);e?(e.previewMode.rerender(!0),new b.Notice("DataCards refreshed",3e3)):new b.Notice("No active markdown view to refresh",3e3)}};
