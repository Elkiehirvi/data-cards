/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin-
*/

var A=Object.defineProperty;var $=Object.getOwnPropertyDescriptor;var I=Object.getOwnPropertyNames;var R=Object.prototype.hasOwnProperty;var U=(m,i)=>{for(var t in i)A(m,t,{get:i[t],enumerable:!0})},B=(m,i,t,e)=>{if(i&&typeof i=="object"||typeof i=="function")for(let a of I(i))!R.call(m,a)&&a!==t&&A(m,a,{get:()=>i[a],enumerable:!(e=$(i,a))||e.enumerable});return m};var N=m=>B(A({},"__esModule",{value:!0}),m);var O={};U(O,{default:()=>k});module.exports=N(O);var y=require("obsidian");var w={preset:"grid",imageProperty:"cover",imageHeight:"200px",imageFit:"cover",properties:"all",exclude:[],scrollableProperties:!1,contentHeight:"200px",showLabels:!0,cardSpacing:16,enableShadows:!0,propertiesAlign:"left",titleAlign:"left",fontSize:"default",enableClickableCards:!1,defaultDateFormat:"YYYY-MM-DD",propertyFormatters:{},mobileColumns:1,mobilePreset:"grid",mobileImageHeight:"150px",mobileScrollableProperties:!0,mobileContentHeight:"150px",forceMobileMode:!1,enableLazyLoading:!1,enableDynamicUpdates:!1,debugMode:!1};var u=require("obsidian"),C=class extends u.PluginSettingTab{constructor(i,t){super(i,t),this.plugin=t}display(){let{containerEl:i}=this;i.empty(),i.createEl("h2",{text:"DataCards Settings"}),i.createEl("h3",{text:"Preset Settings"}),new u.Setting(i).setName("Default Preset").setDesc("Choose the default preset for cards").addDropdown(e=>e.addOption("grid","Grid (balanced, 3 columns)").addOption("portrait","Portrait (optimized for book covers, 3 columns)").addOption("square","Square (1:1 cards with minimal text, 4 columns)").addOption("compact","Compact (side-by-side layout, 4 columns)").addOption("dense","Dense (maximum density, 6 columns)").setValue(this.plugin.settings.preset).onChange(async a=>{this.plugin.settings.preset=a,await this.plugin.saveSettings()})),i.createEl("h3",{text:"Image Settings"}),new u.Setting(i).setName("Default Image Property").setDesc("The frontmatter property to use for images").addText(e=>e.setPlaceholder("cover").setValue(this.plugin.settings.imageProperty).onChange(async a=>{this.plugin.settings.imageProperty=a,await this.plugin.saveSettings()})),i.createEl("h3",{text:"Display Settings"}),new u.Setting(i).setName("Show Property Labels").setDesc("Show labels for properties").addToggle(e=>e.setValue(this.plugin.settings.showLabels).onChange(async a=>{this.plugin.settings.showLabels=a,await this.plugin.saveSettings()})),new u.Setting(i).setName("Card Spacing").setDesc("Space between cards (in pixels)").addSlider(e=>e.setLimits(0,32,4).setValue(this.plugin.settings.cardSpacing).setDynamicTooltip().onChange(async a=>{this.plugin.settings.cardSpacing=a,await this.plugin.saveSettings()})),new u.Setting(i).setName("Enable Card Shadows").setDesc("Add subtle shadows to cards for a more three-dimensional appearance").addToggle(e=>e.setValue(this.plugin.settings.enableShadows).onChange(async a=>{this.plugin.settings.enableShadows=a,await this.plugin.saveSettings()})),new u.Setting(i).setName("Properties Alignment").setDesc("Text alignment for properties and their labels").addDropdown(e=>e.addOption("left","Left").addOption("center","Center").addOption("right","Right").setValue(this.plugin.settings.propertiesAlign).onChange(async a=>{this.plugin.settings.propertiesAlign=a,await this.plugin.saveSettings()})),new u.Setting(i).setName("Title Alignment").setDesc("Text alignment for the title (filename)").addDropdown(e=>e.addOption("left","Left").addOption("center","Center").addOption("right","Right").setValue(this.plugin.settings.titleAlign).onChange(async a=>{this.plugin.settings.titleAlign=a,await this.plugin.saveSettings()})),new u.Setting(i).setName("Font Size").setDesc("Text size for all card elements (properties, labels, and title)").addDropdown(e=>e.addOption("larger","Larger (120%)").addOption("large","Large (110%)").addOption("default","Default (100%)").addOption("small","Small (90% - similar to dense preset)").addOption("smaller","Smaller (80%)").setValue(this.plugin.settings.fontSize).onChange(async a=>{this.plugin.settings.fontSize=a,await this.plugin.saveSettings()})),i.createEl("h3",{text:"Card Content Settings"}),new u.Setting(i).setName("Scrollable Properties").setDesc("Enable scrolling for card properties when they exceed the content height (Note: Square and Compact presets are scrollable by default)").addToggle(e=>e.setValue(this.plugin.settings.scrollableProperties).onChange(async a=>{this.plugin.settings.scrollableProperties=a,await this.plugin.saveSettings()})),i.createEl("h3",{text:"Card Interaction Settings"}),new u.Setting(i).setName("Enable Clickable Cards").setDesc("Make the entire card clickable to open the note (not just the title)").addToggle(e=>e.setValue(this.plugin.settings.enableClickableCards).onChange(async a=>{this.plugin.settings.enableClickableCards=a,await this.plugin.saveSettings()})),new u.Setting(i).setName("Content Height").setDesc("Height of the scrollable content area (e.g., 200px)").addText(e=>e.setPlaceholder("200px").setValue(this.plugin.settings.contentHeight).onChange(async a=>{this.plugin.settings.contentHeight=a||"200px",await this.plugin.saveSettings()})),i.createEl("h3",{text:"Formatting Settings"}),new u.Setting(i).setName("Default Date Format").setDesc("Format for displaying dates (YYYY = year, MM = month, DD = day)").addText(e=>e.setPlaceholder("YYYY-MM-DD").setValue(this.plugin.settings.defaultDateFormat).onChange(async a=>{this.plugin.settings.defaultDateFormat=a||"YYYY-MM-DD",await this.plugin.saveSettings()})),i.createEl("h3",{text:"Mobile Settings"}),new u.Setting(i).setName("Mobile Preset").setDesc("Preset to use on mobile devices").addDropdown(e=>e.addOption("grid","Grid (balanced)").addOption("portrait","Portrait (optimized for book covers)").addOption("square","Square (1:1 cards with minimal text)").addOption("compact","Compact (side-by-side layout)").addOption("dense","Dense (maximum density)").setValue(this.plugin.settings.mobilePreset).onChange(async a=>{this.plugin.settings.mobilePreset=a,await this.plugin.saveSettings()})),new u.Setting(i).setName("Mobile Columns").setDesc("Number of columns to use on mobile devices (default: 1)").addSlider(e=>e.setLimits(1,3,1).setValue(this.plugin.settings.mobileColumns).setDynamicTooltip().onChange(async a=>{this.plugin.settings.mobileColumns=a,await this.plugin.saveSettings()})),new u.Setting(i).setName("Mobile Scrollable Properties").setDesc("Enable scrolling for card properties on mobile devices").addToggle(e=>e.setValue(this.plugin.settings.mobileScrollableProperties).onChange(async a=>{this.plugin.settings.mobileScrollableProperties=a,await this.plugin.saveSettings()})),new u.Setting(i).setName("Mobile Content Height").setDesc("Height of the scrollable content area on mobile devices").addText(e=>e.setPlaceholder("150px").setValue(this.plugin.settings.mobileContentHeight).onChange(async a=>{this.plugin.settings.mobileContentHeight=a||"150px",await this.plugin.saveSettings()})),new u.Setting(i).setName("Force Mobile Mode").setDesc("Force the plugin to use mobile settings even on desktop (for testing)").addToggle(e=>e.setValue(this.plugin.settings.forceMobileMode).onChange(async a=>{this.plugin.settings.forceMobileMode=a,await this.plugin.saveSettings()})),i.createEl("h3",{text:"Performance Settings"}),new u.Setting(i).setName("Enable Lazy Loading").setDesc("Only load images when they become visible (improves performance with many cards)").addToggle(e=>e.setValue(this.plugin.settings.enableLazyLoading).onChange(async a=>{this.plugin.settings.enableLazyLoading=a,await this.plugin.saveSettings()})),i.createEl("h3",{text:"Update Settings"}),new u.Setting(i).setName("Enable Dynamic Updates").setDesc("Automatically update DataCards when properties change (may impact performance)").addToggle(e=>e.setValue(this.plugin.settings.enableDynamicUpdates).onChange(async a=>{this.plugin.settings.enableDynamicUpdates=a,await this.plugin.saveSettings()})),new u.Setting(i).setName("Per-Card Dynamic Updates").setDesc('Individual cards can override the global setting with "dynamicUpdate: true/false" in their settings').setDisabled(!0),i.createEl("h3",{text:"Developer Settings"}),new u.Setting(i).setName("Debug Mode").setDesc("Enable debug logging (only use during development or troubleshooting)").addToggle(e=>e.setValue(this.plugin.settings.debugMode).onChange(async a=>{this.plugin.settings.debugMode=a,await this.plugin.saveSettings()})),i.createEl("h3",{text:"Help"});let t=i.createEl("div");t.innerHTML=`
      <p><strong>Basic Usage:</strong><br>
      Use the <code>datacards</code> code block to create card layouts from Dataview queries.</p>
      
      <p><strong>Example:</strong></p>
      <pre><code>
\`\`\`datacards
TABLE title, author, rating, cover FROM #books
SORT rating DESC

// Settings
preset: grid
imageFit: contain
defaultDateFormat: YYYY
\`\`\`
      </code></pre>
      
      <p><strong>Important:</strong> You must explicitly include all properties you want to display in your Dataview query (including the image property).</p>
      
      <p><strong>Image Support:</strong><br>
      The plugin supports external URLs, vault images, and wiki links:<br>
      <code>cover: https://example.com/image.jpg</code> or <code>cover: [[path/to/image.jpg]]</code></p>     
    
      <p><strong>Tip:</strong> Data Cards works best with the Editor-Setting "Readable line length" disabled. </p><br>
      
      <p><a href="https://github.com/Sophokles187/data-cards" target="_blank" rel="noopener">View complete documentation and examples on GitHub</a></p>
    `}};var n=class{static setDebugMode(i){this.debugMode=i}static error(i,...t){console.error(`[DataCards] ${i}`,...t)}static warn(i,...t){console.warn(`[DataCards] ${i}`,...t)}static debug(i,...t){this.debugMode&&console.log(`[DataCards] ${i}`,...t)}};n.debugMode=!1;var D=class{parseDataCardsBlock(i){n.debug("Parsing datacards block");let t=/\n-{3,}\n|\n\/\/\s*Settings.*|\n\/\*\s*Settings\s*\*\/.*/,e=i.match(t),a=/^\/\/\s*Settings.*/,r=i.match(a),s,o;e&&e.index!==void 0?(n.debug("Found settings separator at index:",e.index),s=i.substring(0,e.index).trim(),o=i.substring(e.index+e[0].length).trim()):r?(n.debug("Block starts with settings marker"),s="",o=i.substring(r[0].length).trim()):(n.debug("No settings separator found"),s=i.trim(),o=""),n.debug("Extracted query:",s),s=this.ensureQueryType(s);let l=this.parseSettings(o),d=this.extractColumnAliases(s);return d.length>0&&(l.columnAliases=d,n.debug("Extracted column aliases:",d)),{query:s,settings:l}}extractColumnAliases(i){let t=[];if(!i.trim().toUpperCase().startsWith("TABLE"))return t;try{let e=i.match(/TABLE\s+(without\s+id\s+)?([\s\S]*?)(?:\s+FROM|\s+WHERE|\s+SORT|\s+GROUP BY|\s+LIMIT|\s+FLATTEN|$)/i);if(!e||!e[2])return t;let a=e[2].trim();if(n.debug("Extracted columns text:",a),!a)return t;let r=this.splitColumnsPreservingExpressions(a);for(let s of r){let o=s.match(/^(.*?)\s+as\s+(?:"([^"]+)"|'([^']+)'|([^\s,]+))$/i);if(o){let l=o[1].trim(),d=o[2]||o[3]||o[4],c=l;if(/^[a-zA-Z0-9_.-]+$/.test(l))c=l;else{let g=l.match(/\(\s*".*?"\s*\+\s*([a-zA-Z0-9_.-]+)\s*\+\s*".*?"\s*\)/);g&&g[1]&&(c=g[1],n.debug(`Extracted field name from complex expression: ${c}`))}t.push({original:c,alias:d,expression:l}),n.debug(`Found column alias: ${c} as "${d}"`)}}}catch(e){n.error("Error extracting column aliases:",e)}return t}splitColumnsPreservingExpressions(i){let t=[],e="",a=0,r=!1,s=!1;for(let o=0;o<i.length;o++){let l=i[o];if(l==='"'&&!s?r=!r:l==="'"&&!r&&(s=!s),!r&&!s&&(l==="("?a++:l===")"&&a--),l===","&&a===0&&!r&&!s){t.push(e.trim()),e="";continue}e+=l}return e.trim()&&t.push(e.trim()),t}ensureQueryType(i){if(!/\b(TABLE|LIST|TASK|CALENDAR)\b/i.test(i)){let e=i.split(`
`),a=-1;for(let r=0;r<e.length;r++){let s=e[r].trim();if(s&&!s.startsWith("//")&&!s.startsWith("/*")){a=r;break}}if(a>=0){let r=this.parseSettings(e.slice(a+1).join(`
`)),s="",o=[];return r.imageProperty&&o.push(r.imageProperty),s="",n.debug("Using simple TABLE query without property list"),s.trim()===""?e[a]="TABLE "+e[a]:e[a]="TABLE"+s+" "+e[a],e.join(`
`)}else return"TABLE "+i}return i}parseSettings(i){if(!i)return{};let t={},e=i.split(`
`);n.debug("Parsing settings from text");for(let a of e){if(a.trim().startsWith("//")||a.trim().startsWith("/*")||!a.trim())continue;let r=a.match(/^\s*([a-zA-Z0-9_]+)\s*:\s*(.+)\s*$/);if(r){let[,s,o]=r;if(n.debug(`Found setting: ${s} = ${o}`),s==="properties"&&o.trim().startsWith("[")&&o.trim().endsWith("]")){n.debug("Detected properties array");let l=o.substring(1,o.length-1).trim();if(l){let d=l.split(",").map(c=>c.trim());t[s]=d}else t[s]=[]}else s==="defaultDateFormat"?t[s]=o.trim():s==="dynamicUpdate"?(t[s]=this.parseValue(o.trim()),n.debug(`Parsed dynamicUpdate setting: ${t[s]}`)):t[s]=this.parseValue(o.trim())}}return t}parseValue(i){n.debug("Parsing value:",i);try{return JSON.parse(i)}catch(t){}if(i.startsWith("[")&&i.endsWith("]")){n.debug("Detected array syntax");let t=i.substring(1,i.length-1).trim();return t?t.split(",").map(a=>a.trim()):[]}return/^-?\d+(\.\d+)?$/.test(i)?Number(i):i.toLowerCase()==="true"?!0:i.toLowerCase()==="false"?!1:i}};var F=require("obsidian");var E=class{constructor(i,t){this.currentSettings=null;this.app=i,this.pluginSettings=t}updateSettings(i){this.pluginSettings=i}isMobileDevice(){return F.Platform.isMobile||this.pluginSettings.forceMobileMode}renderCards(i,t,e){let a=this.isMobileDevice();n.debug("Is mobile device:",a);let r={...this.pluginSettings};n.debug("Initial settings from plugin:",{preset:r.preset,imageHeight:r.imageHeight,mobileColumns:r.mobileColumns,mobilePreset:r.mobilePreset,mobileImageHeight:r.mobileImageHeight}),r={...r,...e},n.debug("After applying block settings:",{preset:r.preset,imageHeight:r.imageHeight,mobileColumns:r.mobileColumns,mobilePreset:r.mobilePreset,mobileImageHeight:r.mobileImageHeight}),a&&(n.debug("Applying mobile settings..."),n.debug(`Using mobile columns: ${r.mobileColumns}`),r.mobilePreset!==void 0&&(n.debug(`Overriding preset: ${r.preset} with mobilePreset: ${r.mobilePreset}`),r.preset=r.mobilePreset),r.mobileImageHeight!==void 0&&(n.debug(`Overriding imageHeight: ${r.imageHeight} with mobileImageHeight: ${r.mobileImageHeight}`),r.imageHeight=r.mobileImageHeight),n.debug("Final settings after applying mobile settings:",{preset:r.preset,imageHeight:r.imageHeight})),this.currentSettings=r;let s=i.createEl("div",{cls:"datacards-container"});s.addClass(`datacards-preset-${r.preset}`),r.enableShadows||s.addClass("datacards-no-shadows"),r.fontSize&&r.fontSize!=="default"?(s.addClass(`datacards-font-${r.fontSize}`),n.debug(`Applied font size class: datacards-font-${r.fontSize}`)):r.preset==="dense"&&(!r.fontSize||r.fontSize==="default")&&(s.addClass("datacards-font-small"),n.debug("Applied small font size for dense preset")),s.style.setProperty("--card-gap",`${r.cardSpacing}px`);let o;if(a)o=r.mobileColumns;else{let d=3;r.preset==="dense"?d=6:r.preset==="compact"||r.preset==="square"?d=4:r.preset==="portrait"&&(d=3),o=e.columns!==void 0?e.columns:d}n.debug(`Using ${o} columns`),s.style.setProperty("--card-columns",o.toString(),"important");let l;if(e.imageHeight!==void 0?l=r.imageHeight:r.preset==="portrait"?l="350px":r.preset==="square"||r.preset==="compact"?l="200px":r.preset==="dense"?l="120px":l="200px",(typeof l=="number"||/^\d+$/.test(l))&&(l=`${l}px`),s.style.setProperty("--image-height",l),e.imageFit!==void 0)s.style.setProperty("--image-fit",r.imageFit);else{let d=r.preset==="portrait"?"contain":"cover";s.style.setProperty("--image-fit",d)}t&&t.values&&Array.isArray(t.values)?(n.debug("Detected table-like results with values array"),this.renderTableResults(s,t,r)):t&&Array.isArray(t)?(n.debug("Detected array results"),this.renderArrayResults(s,t,r)):t&&typeof t=="object"?(n.debug("Detected object results"),this.renderObjectResults(s,t,r)):(n.debug("No valid results detected"),this.renderError(s,"No results or unsupported result type"))}renderError(i,t){let e=i.createEl("div",{cls:"datacards-error",text:t})}renderTableResults(i,t,e){let{values:a,headers:r}=t;n.debug("Rendering table results:"),n.debug("- Headers:",r),n.debug("- Number of rows:",a.length),a.forEach((s,o)=>{n.debug(`Processing row ${o}`);let l=this.createCardElement(i);if(e.imageProperty&&r.includes(e.imageProperty)){let h=r.indexOf(e.imageProperty),f=s[h];n.debug(`Image property '${e.imageProperty}' value:`,f),f&&this.addImageToCard(l,f)}else e.imageProperty&&n.debug(`Image property '${e.imageProperty}' not found in headers:`,r);let d=l.createEl("div",{cls:"datacards-content"});if(r.includes("File")||r.includes("file")){let h=r.findIndex(f=>f.toLowerCase()==="file");if(h>=0){let f=s[h];n.debug("File property value:",f);let b=d.createEl("div",{cls:"datacards-property datacards-file-property-container"});this.formatFileProperty(b,f),e.enableClickableCards&&this.makeCardClickable(l,f)}}let c=d.createEl("div",{cls:"datacards-properties-container"});if(this.shouldUseScrollableProperties(e)){c.addClass("datacards-scrollable-properties");let h=this.getContentHeight(e);c.style.setProperty("--content-height",h)}let p=[];e.properties==="all"?(p=[...r],n.debug("Using all headers as properties:",p)):Array.isArray(e.properties)?(p=[...e.properties],n.debug("Using specified properties:",p)):n.debug("No properties specified, using empty array");let v=p.filter(h=>!e.exclude.includes(h)&&h!==e.imageProperty&&h.toLowerCase()!=="file");n.debug("Filtered properties (after excluding file):",v),v.forEach(h=>{if(n.debug(`Checking property '${h}' in headers:`,r.includes(h)),r.includes(h)){let f=r.indexOf(h),b=s[f];if(console.log(`Property '${h}' value:`,b),console.log(`Property '${h}' type:`,typeof b),typeof b=="string"&&b.includes("[[")&&b.includes("]]")){console.log(`Found wiki link in property '${h}':`,b);let P=c.createEl("div",{cls:"datacards-property"});e.showLabels&&P.createEl("div",{cls:"datacards-property-label",text:h});let M=P.createEl("div",{cls:"datacards-property-value"}),T=b.match(/\[\[([^\]|]+)(?:\|([^\]]+))?\]\]/);if(T){let x=T[1],L=T[2]||this.getCleanFilename(x);console.log(`Creating direct link for wiki link: path="${x}", display="${L}"`);let H=M.createEl("a",{cls:"internal-link",text:L,attr:{href:x,"data-href":x,"data-type":"link"}});this.app.workspace.trigger("hover-link",{event:new MouseEvent("mouseover"),source:"preview",hoverEl:H,targetEl:H,linktext:x})}else M.setText(b)}else this.addPropertyToCard(c,h,b,e)}else n.debug(`Property '${h}' not found in headers`)}),v.length===0&&!r.some(h=>h.toLowerCase()==="file")&&(n.debug("No properties were added to the card"),d.createEl("div",{cls:"datacards-property",text:"No properties to display"}))})}renderArrayResults(i,t,e){t.forEach(a=>{let r=this.createCardElement(i);e.imageProperty&&a[e.imageProperty]&&this.addImageToCard(r,a[e.imageProperty]);let s=r.createEl("div",{cls:"datacards-content"});if("file"in a){let p=s.createEl("div",{cls:"datacards-property datacards-file-property-container"});this.formatFileProperty(p,a.file),e.enableClickableCards&&this.makeCardClickable(r,a.file)}let o=s.createEl("div",{cls:"datacards-properties-container"});if(this.shouldUseScrollableProperties(e)){o.addClass("datacards-scrollable-properties");let p=this.getContentHeight(e);o.style.setProperty("--content-height",p)}let d=Object.keys(a);(e.properties==="all"?d:Array.isArray(e.properties)?e.properties:[]).filter(p=>!e.exclude.includes(p)&&p!==e.imageProperty&&p.toLowerCase()!=="file").forEach(p=>{p in a&&this.addPropertyToCard(o,p,a[p],e)})})}renderObjectResults(i,t,e){let a=this.createCardElement(i);e.imageProperty&&t[e.imageProperty]&&this.addImageToCard(a,t[e.imageProperty]);let r=a.createEl("div",{cls:"datacards-content"});if("file"in t){let g=r.createEl("div",{cls:"datacards-property datacards-file-property-container"});this.formatFileProperty(g,t.file),e.enableClickableCards&&this.makeCardClickable(a,t.file)}let s=r.createEl("div",{cls:"datacards-properties-container"});if(this.shouldUseScrollableProperties(e)){s.addClass("datacards-scrollable-properties");let g=this.getContentHeight(e);s.style.setProperty("--content-height",g)}let l=Object.keys(t);(e.properties==="all"?l:Array.isArray(e.properties)?e.properties:[]).filter(g=>!e.exclude.includes(g)&&g!==e.imageProperty&&g.toLowerCase()!=="file").forEach(g=>{g in t&&this.addPropertyToCard(s,g,t[g],e)})}createCardElement(i){var e;let t=i.createEl("div",{cls:"datacards-card"});return(e=this.currentSettings)!=null&&e.enableClickableCards&&t.addClass("datacards-clickable-card"),t}makeCardClickable(i,t){if(!t)return;let e;if(typeof t=="object"&&t!==null?"path"in t?e=t.path:"link"in t?e=t.link:e=String(t):e=String(t),e.includes("[[")&&e.includes("]]")){let a=e.match(/\[\[([^\]|]+)(?:\|([^\]]+))?\]\]/);a?e=a[1]:e=e.substring(2,e.length-2).split("|")[0]}i.addClass("datacards-clickable-card"),i.addEventListener("click",a=>{a.target.closest(".internal-link")||(this.app.workspace.openLinkText(e,"",!1,{active:!0}),a.stopPropagation())})}addImageToCard(i,t){var s;let e=i.createEl("div",{cls:"datacards-image-container"}),a;typeof t=="object"&&t!==null?(n.debug("Image value is an object:",t),"path"in t?(a=t.path,n.debug("Extracted path from Link object:",a)):(a=String(t),n.debug("Converted object to string:",a))):(a=String(t),n.debug("Image value is a string:",a)),a=this.extractImageSource(a),n.debug("After image source extraction:",a);let r=e.createEl("div",{cls:"datacards-image-placeholder",text:"Loading image..."});(s=this.currentSettings)!=null&&s.enableLazyLoading?this.lazyLoadImage(e,r,a):this.loadImage(e,r,a)}extractImageSource(i){if(!i||typeof i!="string")return String(i||"");let t=i.match(/!\[(.*?)\]\((.*?)\)/);if(t){let r=t[2];return n.debug("Extracted URL from markdown image syntax:",r),r.replace(/['",.;:]+$/,"")}let e=i.match(/\[\[(.*?)\]\]/);if(e){let r=`[[${e[1]}]]`;return n.debug("Extracted wiki link:",r),r}let a=i.match(/(https?:\/\/[^\s"'<>[\]{}]+)/);if(a){let r=a[1];return n.debug("Extracted URL:",r),r.replace(/['",.;:]+$/,"")}return i}lazyLoadImage(i,t,e){n.debug("Lazy loading image:",e),new IntersectionObserver((r,s)=>{r.forEach(o=>{o.isIntersecting&&(n.debug("Image container is now visible, loading image:",e),this.loadImage(i,t,e),s.disconnect())})},{rootMargin:"100px",threshold:.1}).observe(i)}loadImage(i,t,e){let a=e.match(/!\[(.*?)\]\((.*?)\)/);if(a){let r=a[2];n.debug("Extracted URL from markdown image syntax:",r),this.loadImage(i,t,r);return}if(e.startsWith("http")||e.startsWith("https")){n.debug("Handling as external URL:",e);let r=e.replace(/['",.;:]+$/,"");n.debug("Cleaned URL:",r),this.loadExternalImage(i,t,r)}else if(e.startsWith("[[")&&e.endsWith("]]")){n.debug("Handling as wiki link");let r=e.substring(2,e.length-2),s=r;r.includes("|")&&(s=r.split("|")[0]);try{let o=this.app.vault.getAbstractFileByPath(s);if(o&&"stat"in o){n.debug("Found file in vault:",o);let l=o,d=this.app.vault.getResourcePath(l);n.debug("Resource path:",d);let c=i.createEl("img",{cls:"datacards-image",attr:{src:d}});c.onload=()=>{t.remove(),c.addClass("loaded")},c.onerror=()=>{t.setText("Image not found")}}else n.debug("File not found in vault or not a file:",s),t.setText("Image not found")}catch(o){n.error("Error loading image:",o),t.setText("Error loading image")}}else{n.debug("Handling as local path");try{let r=this.app.vault.getAbstractFileByPath(e);if(r&&"stat"in r){n.debug("Found file in vault:",r);let s=r,o=this.app.vault.getResourcePath(s);n.debug("Resource path:",o);let l=i.createEl("img",{cls:"datacards-image",attr:{src:o}});l.onload=()=>{t.remove(),l.addClass("loaded")},l.onerror=()=>{t.setText("Image not found")}}else n.debug("File not found in vault:",e),t.setText("Image not found")}catch(r){n.error("Error loading image:",r),t.setText("Error loading image")}}}loadExternalImage(i,t,e){n.debug("Loading external image with URL:",e);let a=i.createEl("img",{cls:"datacards-image",attr:{src:e,crossorigin:"anonymous"}});a.onload=()=>{n.debug("External image loaded successfully:",e),t.remove(),a.addClass("loaded")},a.onerror=r=>{n.error("Failed to load external image with crossorigin attribute:",e,r),n.debug("Trying again without crossorigin attribute"),a.removeAttribute("crossorigin"),a.onload=()=>{n.debug("External image loaded successfully without crossorigin:",e),t.remove(),a.addClass("loaded")},a.onerror=s=>{n.error("Failed to load external image without crossorigin:",e,s);let o=`https://images.weserv.nl/?url=${encodeURIComponent(e)}`;n.debug("Trying with image proxy service:",o),a.src=o,a.onload=()=>{n.debug("External image loaded successfully via proxy:",o),t.remove(),a.addClass("loaded")},a.onerror=l=>{n.error("All attempts to load image failed:",e,l),t.setText("Image not found - URL: "+e);try{let d=document.createElement("img");d.style.display="none",d.src=e,document.body.appendChild(d),setTimeout(()=>{document.body.contains(d)&&document.body.removeChild(d)},3e3)}catch(d){n.error("Error during final test:",d)}}}}}addPropertyToCard(i,t,e,a){n.debug(`Adding property to card: ${t} = ${e}`),n.debug(`Property type: ${typeof e}`);let r=i.createEl("div",{cls:"datacards-property"});a.propertiesAlign&&r.addClass(`datacards-text-${a.propertiesAlign}`);let s=t;if(a.columnAliases){let o=a.columnAliases.find(l=>l.original===t);o&&(s=o.alias,n.debug(`Using alias "${s}" for property "${t}"`))}if(a.showLabels){let o=r.createEl("div",{cls:"datacards-property-label",text:s});a.propertiesAlign&&o.addClass(`datacards-text-${a.propertiesAlign}`)}if(t.toLowerCase()==="file")this.formatFileProperty(r,e);else{let o=a.propertyFormatters[t];o?this.formatPropertyWithCustomFormatter(r,e,o):this.formatPropertyByType(r,e)}}formatPropertyWithCustomFormatter(i,t,e){let a=i.createEl("div",{cls:"datacards-property-value"});switch(e.type){case"stars":this.formatAsStars(a,t,e.options);break;case"badge":this.formatAsBadge(a,t,e.options);break;case"progress":this.formatAsProgress(a,t,e.options);break;case"date":this.formatAsDate(a,t,e.options);break;case"tags":this.formatAsTags(a,t,e.options);break;default:a.setText(String(t))}}formatPropertyByType(i,t){n.debug("formatPropertyByType called with value:",t),n.debug("Value type:",typeof t),typeof t=="string"&&(n.debug("String value length:",t.length),n.debug("String value exact content:",JSON.stringify(t)));let e=i.createEl("div",{cls:"datacards-property-value"});if(i.hasClass("datacards-text-left")?e.addClass("datacards-text-left"):i.hasClass("datacards-text-center")?e.addClass("datacards-text-center"):i.hasClass("datacards-text-right")&&e.addClass("datacards-text-right"),t==null)e.setText("");else if(Array.isArray(t))e.setText(t.join(", "));else if(typeof t=="boolean"){let a=e.createEl("input",{attr:{type:"checkbox",checked:t?"checked":"",disabled:"disabled"}})}else if(typeof t=="number")e.setText(t.toString());else if(t instanceof Date)this.formatAsDate(e,t);else if(typeof t=="string"){if(/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{3}[+-]\d{2}:\d{2}$/.test(t)||/^\d{4}-\d{2}-\d{2}$/.test(t)){let o=new Date(t);if(!isNaN(o.getTime())){this.formatAsDate(e,o);return}}let r=this.extractImageSource(t);if(r!==t){this.formatPropertyByType(i,r);return}if(typeof t=="string"&&t.includes("[[")&&t.includes("|")&&t.includes("]]")){let o=t.match(/\[\[.*\|(.*?)\]\]/);if(o&&o[1]){e.setText(o[1]);return}}if(t.includes("[[")&&t.includes("]]")){console.log("DATACARDS DEBUG: Found wiki link in property value:",t),n.debug("Found wiki link in property value:",t);let o=/\[\[([^\]|]+)(?:\|([^\]]+))?\]\]/,l=t.match(o);if(l){console.log("DATACARDS DEBUG: Wiki link match:",l),n.debug("Wiki link match:",l);let d=l[1],c=l[2]||this.getCleanFilename(d);console.log(`DATACARDS DEBUG: Wiki link path: "${d}", display text: "${c}"`),n.debug(`Wiki link path: "${d}", display text: "${c}"`),console.log("DATACARDS DEBUG: Creating link element for wiki link");let g=e.createEl("a",{cls:"internal-link datacards-file-link",text:c,attr:{href:d,"data-href":d,"data-type":"link"}});console.log("DATACARDS DEBUG: Link element created:",g),this.app.workspace.trigger("hover-link",{event:new MouseEvent("mouseover"),source:"preview",hoverEl:g,targetEl:g,linktext:d});return}}let s=t.match(/!\[(.*?)\]\((.*?)\)/);if(s){n.debug("Found markdown image in property value");let o=s[2],l=s[1];e.addClass("loading");let d=e.createEl("img",{cls:"datacards-property-image loading",attr:{src:o,alt:l||"Image",crossorigin:"anonymous"}});d.onload=()=>{n.debug("Property image loaded successfully:",o),d.removeClass("loading")},d.onerror=()=>{n.error("Failed to load property image:",o),d.remove(),e.removeClass("loading"),e.addClass("image-error"),e.setText("Image not found: "+o)};return}if(t.startsWith("[[")&&t.endsWith("]]")){console.log("DATACARDS DEBUG: Processing wiki link that starts and ends with [[]]:",t),n.debug("Processing wiki link that starts and ends with [[]]:",t);let o=/\[\[([^\]|]+)(?:\|([^\]]+))?\]\]/,l=t.match(o);if(l){let d=l[1],c=l[2]||this.getCleanFilename(d);console.log(`DATACARDS DEBUG: Wiki link path: "${d}", display text: "${c}"`),n.debug(`Wiki link path: "${d}", display text: "${c}"`),console.log("DATACARDS DEBUG: Creating link element for wiki link (direct match)");let g=e.createEl("a",{cls:"internal-link datacards-file-link",text:c,attr:{href:d,"data-href":d,"data-type":"link"}});console.log("DATACARDS DEBUG: Link element created (direct match):",g),this.app.workspace.trigger("hover-link",{event:new MouseEvent("mouseover"),source:"preview",hoverEl:g,targetEl:g,linktext:d})}else{let d=t.substring(2,t.length-2),c=d,g=d;if(d.includes("|")){let v=d.split("|");g=v[0],c=v[1]}else c=this.getCleanFilename(g);n.debug(`Fallback wiki link path: "${g}", display text: "${c}"`);let p=e.createEl("a",{cls:"internal-link datacards-file-link",text:c,attr:{href:g,"data-href":g,"data-type":"link"}});this.app.workspace.trigger("hover-link",{event:new MouseEvent("mouseover"),source:"preview",hoverEl:p,targetEl:p,linktext:g})}}else if(t.startsWith("#")){let o=e.createEl("a",{cls:"datacards-tag tag-link",text:t,attr:{href:t,"data-href":t,"data-type":"tag"}})}else/<[ubia]>|<\/[ubia]>|<span|<div|<p>|<\/p>|<br>|<hr>/.test(t)?(console.log("DATACARDS DEBUG: Rendering HTML content:",t),e.innerHTML=t):e.setText(t)}else if(typeof t=="object"&&t!==null){if("path"in t&&"type"in t&&t.type==="file"){console.log("Handling Dataview Link object:",t);let a=t.path,r=t.display||this.getCleanFilename(a);console.log(`Creating link from Dataview Link object: path="${a}", display="${r}"`);let s=e.createEl("a",{cls:"internal-link",text:r,attr:{href:a,"data-href":a,"data-type":"link"}});this.app.workspace.trigger("hover-link",{event:new MouseEvent("mouseover"),source:"preview",hoverEl:s,targetEl:s,linktext:a});return}if("ts"in t&&typeof t.ts=="number"){let a=new Date(t.ts);if(!isNaN(a.getTime())){this.formatAsDate(e,a);return}}e.setText(String(t))}else e.setText(String(t))}formatAsStars(i,t,e){let a=(e==null?void 0:e.max)||5,r="\u2605",s="\u2606",o=i.createEl("div",{cls:"datacards-stars"}),l=Math.min(Math.max(0,t),a);for(let d=0;d<l;d++)o.createEl("span",{cls:"datacards-star datacards-star-full",text:r});for(let d=l;d<a;d++)o.createEl("span",{cls:"datacards-star datacards-star-empty",text:s})}formatAsBadge(i,t,e){let a=i.createEl("span",{cls:"datacards-badge",text:t});e!=null&&e.color&&(a.style.backgroundColor=e.color)}formatAsProgress(i,t,e){let a=(e==null?void 0:e.max)||100,r=Math.min(Math.max(0,t),a)/a*100,s=i.createEl("div",{cls:"datacards-progress-container"}),o=s.createEl("div",{cls:"datacards-progress-bar"});o.style.width=`${r}%`,e!=null&&e.showText&&s.createEl("span",{cls:"datacards-progress-text",text:`${Math.round(r)}%`})}formatAsDate(i,t,e){let a=typeof t=="string"?new Date(t):t;if(isNaN(a.getTime())){i.setText(String(t));return}let r=(e==null?void 0:e.format)||(this.currentSettings?this.currentSettings.defaultDateFormat:w.defaultDateFormat),s=a.getFullYear(),o=(a.getMonth()+1).toString().padStart(2,"0"),l=a.getDate().toString().padStart(2,"0"),d=r.replace("YYYY",s.toString()).replace("MM",o).replace("DD",l);i.setText(d)}formatFileProperty(i,t){var r;let e=i.createEl("div",{cls:"datacards-property-value datacards-file-property"});if((r=this.currentSettings)!=null&&r.titleAlign?e.addClass(`datacards-text-${this.currentSettings.titleAlign}`):i.hasClass("datacards-text-left")?e.addClass("datacards-text-left"):i.hasClass("datacards-text-center")?e.addClass("datacards-text-center"):i.hasClass("datacards-text-right")&&e.addClass("datacards-text-right"),t==null){e.setText("");return}let a;if(typeof t=="object"&&t!==null?"path"in t?a=t.path:"link"in t?a=t.link:a=String(t):a=String(t),a=this.extractImageSource(a),n.debug("File property after image source extraction:",a),typeof t=="string"&&t.includes("[[")&&t.includes("|")&&t.includes("]]")){console.log("DATACARDS DEBUG: Found wiki link with pipe character:",t);let s=t.match(/\[\[.*\|(.*?)\]\]/);if(s&&s[1]){console.log("DATACARDS DEBUG: Extracted display text:",s[1]);let o=t.match(/\[\[(.*?)\|(.*?)\]\]/);if(o){let l=o[1],d=o[2];console.log(`DATACARDS DEBUG: Creating link from pipe syntax - path: "${l}", display: "${d}"`);let c=e.createEl("a",{cls:"internal-link datacards-file-link",text:d,attr:{href:l,"data-href":l,"data-type":"link"}});console.log("DATACARDS DEBUG: Created link element for pipe syntax:",c),this.app.workspace.trigger("hover-link",{event:new MouseEvent("mouseover"),source:"preview",hoverEl:c,targetEl:c,linktext:l});return}else{console.log("DATACARDS DEBUG: Fallback to text only for pipe syntax"),e.setText(s[1]);return}}}if(a.includes("[[")&&a.includes("]]")){n.debug("Found wiki link in file property:",a);let s=a.match(/\[\[([^\]]+)\]\]/);if(s){let o=s[1],l=o,d=o;if(o.includes("|")){let g=o.split("|");d=g[0],l=g[1]}else l=this.getCleanFilename(d);let c=e.createEl("a",{cls:"internal-link datacards-file-link",text:l,attr:{href:d,"data-href":d,"data-type":"link"}});return}}else if(a.startsWith("[[")&&a.endsWith("]]")){let s=a.substring(2,a.length-2),o=s,l=s;if(s.includes("|")){let c=s.split("|");l=c[0],o=c[1]}else o=this.getCleanFilename(l);let d=e.createEl("a",{cls:"internal-link datacards-file-link",text:o,attr:{href:l,"data-href":l,"data-type":"link"}})}else{let s=this.getCleanFilename(a),o=e.createEl("a",{cls:"internal-link datacards-file-link",text:s,attr:{href:a,"data-href":a,"data-type":"link"}})}}getCleanFilename(i){let t=i;return t.includes("/")&&(t=t.split("/").pop()||t),t.endsWith(".md")&&(t=t.substring(0,t.length-3)),t}formatAsTags(i,t,e){let a=i.createEl("div",{cls:"datacards-tags-container"});(Array.isArray(t)?t:[t]).forEach(s=>{let o=s.startsWith("#")?s:`#${s}`,l=a.createEl("a",{cls:"datacards-tag tag-link",text:o,attr:{href:o,"data-href":o,"data-type":"tag"}})})}shouldUseScrollableProperties(i){let t=!1;return(i.preset==="square"||i.preset==="compact")&&(t=!0),this.pluginSettings.scrollableProperties!==void 0&&(t=this.pluginSettings.scrollableProperties),this.isMobileDevice()&&this.pluginSettings.mobileScrollableProperties!==void 0&&(t=this.pluginSettings.mobileScrollableProperties),i.scrollableProperties!==void 0&&(t=i.scrollableProperties),t}getContentHeight(i){let t="200px";return this.pluginSettings.contentHeight&&(t=this.pluginSettings.contentHeight),this.isMobileDevice()&&this.pluginSettings.mobileContentHeight&&(t=this.pluginSettings.mobileContentHeight),i.contentHeight&&(t=i.contentHeight),t}};var S=class{constructor(i){this.plugin=i}isDataviewEnabled(){return this.plugin.app.plugins.plugins.dataview!==void 0}getDataviewApi(){return this.isDataviewEnabled()?this.plugin.app.plugins.plugins.dataview.api:null}async executeQuery(i,t,e){let a=this.getDataviewApi();if(!a)return null;try{return await a.query(i,t,e)}catch(r){throw n.error("Error executing Dataview query:",r),r}}async waitForDataviewReady(){let i=this.getDataviewApi();return i?i.index&&i.index.initialized?(n.debug("Dataview index is already initialized"),!0):(n.debug("Waiting for Dataview index to be ready..."),new Promise(t=>{let e=this.plugin.app,a=e.metadataCache.on("dataview:index-ready",()=>{n.debug("Dataview index is now ready"),e.metadataCache.offref(a),t(!0)});setTimeout(()=>{n.warn("Timed out waiting for Dataview index"),e.metadataCache.offref(a),t(!1)},5e3)})):!1}async executeSafeQuery(i,t,e,a=0){let r=this.getDataviewApi();if(!r)return n.error("Dataview API not found. Make sure Dataview plugin is enabled."),{successful:!1,value:"Dataview plugin is not enabled"};if(!i||i.trim()==="")return n.error("Empty Dataview query"),{successful:!1,value:"Empty query"};n.debug("Executing Dataview query:",i),n.debug("Source path:",t);try{if(typeof r.query=="function"){n.debug("Using api.query method");try{let s=await r.query(i,t,e);return n.debug("Direct query result type:",typeof s),s==null?(n.error("Direct query returned undefined or null"),{successful:!1,value:"No results returned"}):(s&&typeof s=="object"&&("values"in s&&Array.isArray(s.values)&&n.debug("Result contains a values array with length:",s.values.length),"headers"in s&&Array.isArray(s.headers)&&n.debug("Result contains headers:",s.headers)),s&&typeof s=="object"&&"values"in s&&Array.isArray(s.values)&&s.values.length===0&&a<3?(n.debug(`Empty result, retrying (attempt ${a+1}/3)...`),new Promise(o=>{setTimeout(async()=>{let l=await this.executeSafeQuery(i,t,e,a+1);o(l)},500)})):{successful:!0,value:s})}catch(s){return n.error("Error in direct query:",s),{successful:!1,value:s?s.message||String(s):"Error in query execution"}}}else return n.error("Dataview API query method not found."),{successful:!1,value:"Incompatible Dataview API version"}}catch(s){return n.error("Error executing Dataview query:",s),{successful:!1,value:s?s.message||String(s):"Unknown error"}}}};var k=class extends y.Plugin{constructor(){super(...arguments);this.isRefreshing=!1;this.lastActiveElement=null;this.refreshDebounceTimeout=2500;this.debouncedRefresh=(0,y.debounce)(t=>{this.refreshAffectedDataCards(t)},this.refreshDebounceTimeout)}async onload(){await this.loadSettings(),n.setDebugMode(this.settings.debugMode),this.parserService=new D,this.rendererService=new E(this.app,this.settings),this.dataviewApiUtil=new S(this),this.registerMarkdownCodeBlockProcessor("datacards",this.processDataCardsBlock.bind(this)),this.addSettingTab(new C(this.app,this)),this.addCommand({id:"refresh-datacards",name:"Refresh all DataCards",callback:()=>{this.refreshAllDataCards(!0)}}),this.registerDataviewEvents(),n.debug("DataCards plugin loaded")}registerDataviewEvents(){this.app.workspace.onLayoutReady(()=>{if(!this.dataviewApiUtil.isDataviewEnabled()){n.warn("Dataview plugin is not enabled, cannot register for metadata change events");return}this.registerEvent(this.app.metadataCache.on("dataview:metadata-change",(t,e)=>{this.handleMetadataChange(t,e)})),n.debug("Registered for Dataview metadata change events")})}handleMetadataChange(t,e){if(!this.settings.enableDynamicUpdates){n.debug("Dynamic updates are disabled globally, ignoring metadata change");return}n.debug(`Dataview metadata changed: ${t} for file ${e==null?void 0:e.path}`),this.debouncedRefresh(e)}refreshAffectedDataCards(t){t&&(this.lastActiveElement=document.activeElement,this.refreshAllDataCards(!1))}onunload(){n.debug("DataCards plugin unloaded")}async loadSettings(){this.settings=Object.assign({},w,await this.loadData())}async saveSettings(){await this.saveData(this.settings),n.setDebugMode(this.settings.debugMode),this.rendererService.updateSettings(this.settings),this.refreshAllDataCards(!0)}async processDataCardsBlock(t,e,a){if(n.debug("Processing DataCards block"),!this.dataviewApiUtil.isDataviewEnabled()){n.error("Dataview plugin is not enabled"),e.createEl("div",{cls:"datacards-error",text:"Dataview plugin is required but not enabled"});return}await this.dataviewApiUtil.waitForDataviewReady()||n.warn("Timed out waiting for Dataview to be ready");try{let{query:s,settings:o}=this.parserService.parseDataCardsBlock(t);n.debug("Parsed query:",s),n.debug("Parsed settings:",o);let l=a.sourcePath,d=document.createElement("div");d.style.display="none",document.body.appendChild(d);try{n.debug("Executing Dataview query");let c=await this.dataviewApiUtil.executeSafeQuery(s,l,d);if(document.body.removeChild(d),!c){n.error("Result is undefined or null"),e.createEl("div",{cls:"datacards-error",text:"Error executing Dataview query: undefined result"});return}if(!c.successful){let p=`Error executing Dataview query: ${c.value||"unknown error"}`;n.error(p),e.createEl("div",{cls:"datacards-error",text:p});return}if(c.value&&typeof c.value=="object"&&"successful"in c.value&&c.value.successful===!1){let p=`Error executing Dataview query: ${c.value.error||"unknown error"}`;n.error(p),e.createEl("div",{cls:"datacards-error",text:p});return}if(c.value===void 0||c.value===null){n.error("Dataview returned null or undefined value"),e.createEl("div",{cls:"datacards-error",text:"Dataview returned no results. Make sure your query is correct and returns data."});return}if(Array.isArray(c.value)&&c.value.length===0){n.debug("Dataview returned empty array"),e.createEl("div",{cls:"datacards-info",text:"No files match your query criteria."});return}if(c.value.values&&Array.isArray(c.value.values)&&c.value.values.length===0){n.debug("Dataview returned empty table"),e.createEl("div",{cls:"datacards-info",text:"No files match your query criteria."});return}let g=c.value;g&&typeof g=="object"&&"successful"in g&&"value"in g&&(n.debug("Unwrapping nested result structure"),g=g.value),o.dynamicUpdate!==void 0&&n.debug(`Card has dynamicUpdate setting: ${o.dynamicUpdate}`),this.rendererService.renderCards(e,g,o)}catch(c){n.error("Error executing Dataview query:",c),document.body.contains(d)&&document.body.removeChild(d),e.createEl("div",{cls:"datacards-error",text:`Error executing Dataview query: ${c.message||String(c)}`})}}catch(s){n.error("DataCards error:",s),e.createEl("div",{cls:"datacards-error",text:`Error processing DataCards block: ${s.message||String(s)}`})}}refreshAllDataCards(t=!0){if(this.isRefreshing)return;this.isRefreshing=!0;let e=this.app.workspace.getActiveViewOfType(y.MarkdownView);e?(e.previewMode.rerender(!0),t&&new y.Notice("DataCards refreshed",2e3),setTimeout(()=>{this.lastActiveElement&&document.body.contains(this.lastActiveElement)&&this.lastActiveElement.focus(),this.isRefreshing=!1},50)):(t&&new y.Notice("No active markdown view to refresh",2e3),this.isRefreshing=!1)}};
